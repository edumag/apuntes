{"config":{"lang":["es"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>Apuntes sobre lenguajes de programaci\u00f3n, herramientas y linux.</p>"},{"location":"#contacto","title":"Contacto","text":"<p>Eduardo Magran\u00e9</p> <p>edu@lesolivex.com</p>"},{"location":"desarrollo/Markdown-pandoc-varios/","title":"Trucos de pandoc para exportar markdown","text":""},{"location":"desarrollo/Markdown-pandoc-varios/#espacios-en-blanco","title":"Espacios en blanco.","text":"<pre><code>$~$\n$~$\n$~$\n</code></pre>"},{"location":"desarrollo/Markdown-pandoc-varios/#no-poner-numero-de-pagina-en-el-pdf","title":"No poner numero de pagina en el pdf.","text":"<p>Podemos a\u00f1adir en la cabecera del documentos la siguiente instrucci\u00f3n.</p> <pre><code>\\pagenumbering{gobble}\n</code></pre>"},{"location":"desarrollo/Markdown-pandoc-varios/#margenes-de-las-paginas","title":"Margenes de las paginas.","text":"<p>A\u00f1adir la opci\u00f3n al exportar, ejemplo:</p> <pre><code>pandoc  -V geometry:margin=1in -o Escriptori/ejemplo.pdf ejemplo.md\n</code></pre>"},{"location":"desarrollo/VirtualHost-apache-local/","title":"Crear virtual host en local con apache","text":""},{"location":"desarrollo/VirtualHost-apache-local/#instalacion-de-apache","title":"Instalaci\u00f3n de apache","text":"<pre><code>sudo apt-get install apache2 libapache2-mod-php7.2 php7.2 php7.2-xml php7.2-gd php7.2-opcache php7.2-mbstring\n</code></pre> <p>Una vez instalado apache</p> <pre><code>sudo a2enmod rewrite\n</code></pre>"},{"location":"desarrollo/VirtualHost-apache-local/#creamos-fichero-de-configuracion","title":"Creamos fichero de configuraci\u00f3n","text":"<pre><code>cd /etc/apache2/sites-available/\n</code></pre>"},{"location":"desarrollo/VirtualHost-apache-local/#localvirtualhostconf","title":"localvirtualhost.conf","text":"<pre><code>&lt;VirtualHost *:80&gt;\n    ServerName $DOMINIO_LOCAL\n    ServerAdmin webmaster@localhost\n    ErrorLog ${APACHE_LOG_DIR}/error.log\n    CustomLog ${APACHE_LOG_DIR}/access.log combined\n    DocumentRoot $DIR_PROYECTO\n    &lt;Directory  \"$DIR_PROYECTO\"&gt;\n        Options +Indexes +Includes +FollowSymLinks +MultiViews\n        AllowOverride All\n        Require all granted\n    &lt;/Directory&gt;\n&lt;/VirtualHost&gt;\n\n# vim: syntax=apache ts=4 sw=4 sts=4 sr noet\n</code></pre>"},{"location":"desarrollo/VirtualHost-apache-local/#activamos-configuracion","title":"Activamos configuraci\u00f3n","text":"<pre><code>sudo a2ensite localvirtualhost.conf\nsudo systemctl restart apache2\n</code></pre>"},{"location":"desarrollo/VirtualHost-apache-local/#permisos","title":"Permisos","text":"<pre><code>sudo chgrp -R www-data $DIR_PROYECTO\nsudo chmod -R 775 $DIR_PROYECTO/storage\n</code></pre>"},{"location":"desarrollo/Ionic/DesarrolloIonicUbuntu18.04/","title":"Preparar entorno desarrollo con ionic4 en KDE Neon (ubuntu 18.04)","text":"<p>Ejemplo de aplicaci\u00f3n creada con ionic desde ubuntu o en mi caso derivada.</p> <p>Instalamos node, android studio, ioinc y subimos a nuestro servidor con dokku.</p> <p></p> <p>Formato web</p> <p></p> <p>Formato movil</p>"},{"location":"desarrollo/Ionic/DesarrolloIonicUbuntu18.04/#instalacion","title":"Instalaci\u00f3n","text":""},{"location":"desarrollo/Ionic/DesarrolloIonicUbuntu18.04/#limpieza","title":"Limpieza","text":"<pre><code>sudo apt-get purge \u2013auto-remove nodejs\nsudo rm -rf /usr/local/bin/npm /usr/local/share/man/man1/node* /usr/local/lib/dtrace/node.d ~/.npm ~/.node-gyp /opt/local/bin/node /opt/local/include/node /opt/local/lib/node_modules\nsudo rm -rf /usr/local/lib/node*\nsudo rm -rf /usr/local/include/node*\nsudo rm -rf /usr/local/bin/node*\n</code></pre>"},{"location":"desarrollo/Ionic/DesarrolloIonicUbuntu18.04/#nvm-y-nodejs","title":"NVM y NodeJS","text":"<pre><code>sudo apt install build-essential libssl-dev\nwget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.2/install.sh | bash\nsource .bashrc\n# Buscamos la \u00faltima release.\nnvm ls-remote\n# Instalamos.\nnvm install v12.14.0\nnpm install -g cordova\nsudo apt update\nsudo apt install libc6:i386 libncurses5:i386 libstdc++6:i386 lib32z1 libbz2-1.0:i386\nnpm install -g ionic\n</code></pre>"},{"location":"desarrollo/Ionic/DesarrolloIonicUbuntu18.04/#android-studio","title":"Android studio.","text":"<p>Bajamos de https://developer.android.com/studio/</p> <pre><code>sudo mv android-studio-ide-*-linux.zip /opt/\ncd /opt/\nsudo unzip /opt/android-studio-ide-*-linux.zip\nsudo chown -R $USER:$USER android-studio\n./bin/studio.sh  (ignore if you want to create a shortcut, you\u2019ll need it)\nsudo ln -sf /opt/android-studio/bin/studio.sh /bin/android-studio\nsudo nano /usr/share/applications/android-studio.desktop\n\n[Desktop Entry]\nVersion=1.0\nType=Application\nName=Android Studio 3.1.3\nComment=Android Studio\nExec=bash -i \"/opt/android-studio/bin/studio.sh\" %f\nIcon=/opt/android-studio/bin/studio.png\nCategories=Development;IDE;\nTerminal=false\nStartupNotify=true\nStartupWMClass=jetbrains-android-studio\nName[en_GB]=android-studio.desktop\n\nInstall Android SDK, \u2018platform-tools\u2019 and \u2018tools\u2019\nAdd Android and SDK paths to your bash profile\n# Set Android_HOME\nexport ANDROID_HOME=~/Android/Sdk\n# Add the Android SDK to the ANDROID_HOME variable\nexport PATH=$ANDROID_HOME/platform-tools:$PATH\nexport PATH=$ANDROID_HOME/tools:$PATH\nInstall Gradle build tool, with SKDMAN\ncurl -s \u201chttps://get.sdkman.io&amp;#8221; | bash\nsource \u201c$HOME/.sdkman/bin/sdkman-init.sh\u201d\n</code></pre>"},{"location":"desarrollo/Ionic/DesarrolloIonicUbuntu18.04/#referencias","title":"Referencias","text":"<ul> <li>Art\u00edculo de javascriptsurvival</li> </ul>"},{"location":"desarrollo/Ionic/DesarrolloIonicUbuntu18.04/#aplicacion-con-capacitor-y-react","title":"Aplicaci\u00f3n con capacitor y react","text":"<p>Ejemplo:</p> <pre><code>ionic start TUAPLICACION tabs --capacitor\n</code></pre> <p>Seleccionamos react como tipo de proyecto.</p> <pre><code>cd TUAPLICACION\n</code></pre> <p>Iniciamos servidor de ionic.</p> <pre><code>ionic serve\n</code></pre> <p>Activar capacitor.</p> <pre><code>npx cap init TUAPLICACION TUAPLICACION.com\nionic build\n</code></pre> <p>En mi caso no creo el directorio www con lo cual no pude a\u00f1adir la plataforma para android.</p> <p>Para corregir esto modificamos el fichero capacitor.config.json cambiando la linea que especifica la carpeta.</p> <pre><code>\"webDir\": \"public\"\n</code></pre> <p>y en el fichero package.json a\u00f1adimos una nueva linea.</p> <pre><code>\"scripts\": {\n    \"start\": \"react-scripts start\",\n    \"build\": \"react-scripts build\",\n    \"test\": \"react-scripts test\",\n    \"eject\": \"react-scripts eject\",\n    \"ionic:build\": \"npm run build &amp;&amp; ionic capacitor copy android\" # Nueva linea\n  },\n</code></pre> <p>Volvemos a ejecutar \"ionic build\".</p> <p>Y tendremos tanto la carpeta public como la de android.</p> <p>Finalmente volvemos a cambiar el fichero \"capacitor.config.json\" y cambiamos \"public\" por \"build\".</p> <p>Ahora ya podemos abrir la carpeta android con android-studio y crear nuestra app.</p>"},{"location":"desarrollo/Ionic/DesarrolloIonicUbuntu18.04/#referencia","title":"Referencia","text":"<ul> <li>Soluci\u00f3n al error con build, medium.com</li> </ul>"},{"location":"desarrollo/Ionic/DesarrolloIonicUbuntu18.04/#trabajando","title":"Trabajando","text":""},{"location":"desarrollo/Ionic/DesarrolloIonicUbuntu18.04/#actualizar-cambios","title":"Actualizar cambios.","text":"<pre><code>ionic build\n# Copiar cambios a las diferentes plataformas.\nnpx cap copy\n# Sincronizar cambios.\nnpx cap update\n</code></pre>"},{"location":"desarrollo/Ionic/DesarrolloIonicUbuntu18.04/#subir-a-dokku","title":"Subir a dokku","text":"<p>A\u00f1adimos informaci\u00f3n al package.json para dokku.</p> <pre><code>  \"engines\": {\n    \"node\": \"^12.7.5\",\n    \"npm\": \"&gt;= 6.13.4\"\n  },\n</code></pre> <p>Desde dokku:</p> <pre><code>dokku apps:create TUAPLICACION\ndokku domains:add TUAPLICACION TUAPLICACION.TUSERVIDOR.com\n</code></pre> <p>A\u00f1adimos repositorio de dokku.</p> <pre><code>git remote add dokku dokku@TUSERVIDOR.com:TUAPLICACION\n</code></pre>"},{"location":"desarrollo/Ionic/DesarrolloIonicUbuntu18.04/#referencias_1","title":"Referencias.","text":"<ul> <li>albertgao.xyz</li> </ul>"},{"location":"desarrollo/Ionic/DesarrolloIonicUbuntu18.04/#referencias_2","title":"Referencias","text":"<ul> <li> <p>Capacitor: La nueva forma de construir apps nativas con Ionic, de nicobytes</p> </li> <li> <p>Documentaci\u00f3n oficial de capacitor</p> </li> <li> <p>Documentaci\u00f3noficial de ionic</p> </li> </ul>"},{"location":"desarrollo/documentacion/mkdocs_github/","title":"Mkdocs github","text":"<p>Automatizar la publicaci\u00f3n de los apuntes generados en markdown con github.</p> <p>Se da por entendido que ya tienes mkdocs con tu documentos.</p> <p>Para ver como hacerlo: https://www.mkdocs.org/</p> <pre><code>virtualenv autodocs\nsource autodocs/bin/activate\n</code></pre> <p>Generarar fichero requirements.txt</p> <pre><code>Babel==2.8.0\nclick==7.1.1\nfuture==0.18.2\ngitdb==4.0.4\nGitPython==3.1.1\nhtmlmin==0.1.12\nJinja2==2.11.2\njoblib==0.14.1\njsmin==2.2.2\nlivereload==2.6.1\nlunr==0.5.6\nMarkdown==3.2.1\nMarkupSafe==1.1.1\nmkdocs==1.1\nmkdocs-awesome-pages-plugin==2.2.1\nmkdocs-git-revision-date-localized-plugin==0.5.0\nmkdocs-material==5.1.1\nmkdocs-material-extensions==1.0b1\nmkdocs-minify-plugin==0.3.0\nnltk==3.5\nPygments==2.6.1\npymdown-extensions==7.0\npytz==2019.3\nPyYAML==5.3.1\nregex==2020.4.4\nsix==1.14.0\nsmmap==3.0.2\ntornado==6.0.4\ntqdm==4.45.0\n</code></pre> <p>Fichero .gitignore</p> <pre><code>autodocs/\nrequirements.txt\nsite\n</code></pre> <pre><code>git commit -am 'Init mkdocs with github'\n</code></pre> <pre><code>mkdocs gh-deploy\n</code></pre> <p>Salida del comando:</p> <pre><code>INFO     -  Cleaning site directory\nINFO     -  Building documentation to directory: /home/edumag/desarrollo/apuntes/site\nINFO     -  Documentation built in 0.69 seconds\nINFO     -  Copying '/home/edumag/desarrollo/apuntes/site' to 'gh-pages' branch and pushing to GitHub.\nEnumerating objects: 5, done.\nCounting objects: 100% (5/5), done.\nDelta compression using up to 8 threads\nCompressing objects: 100% (3/3), done.\nWriting objects: 100% (3/3), 312 bytes | 312.00 KiB/s, done.\nTotal 3 (delta 2), reused 0 (delta 0), pack-reused 0\nremote: Resolving deltas: 100% (2/2), completed with 2 local objects.\nTo github.com:edumag/apuntes.git\n   e027fa4..484035f  gh-pages -&gt; gh-pages\n   INFO     -  Your documentation should shortly be available at: https://edumag.github.io/apuntes/\n</code></pre> <p>Referencias:</p> <ul> <li>https://squidfunk.github.io/mkdocs-material/customization/</li> </ul>"},{"location":"desarrollo/drupal/Instalacion-drupal-commerce-demo-con-ddev/","title":"Instalaci\u00f3n de drupal con ddev","text":"<p>Hacemos una instalaci\u00f3n demo de drupal commerce en local.</p>"},{"location":"desarrollo/drupal/Instalacion-drupal-commerce-demo-con-ddev/#instalacion-de-ddev","title":"Instalaci\u00f3n de ddev","text":"<pre><code>curl -L https://raw.githubusercontent.com/drud/ddev/master/scripts/install_ddev.sh | bash\n\ncat /tmp/ddev_bash_completion.sh &gt;&gt; ~/.bashrc\n</code></pre>"},{"location":"desarrollo/drupal/Instalacion-drupal-commerce-demo-con-ddev/#iniciar-proyecto-drupal-commerce","title":"Iniciar proyecto drupal commerce","text":"<pre><code>mkdir $SITE_NAME\ncd $SITE_NAME\nddev config --docroot web --project-name $SITE_NAME --project-type drupal8\nddev start\nddev composer create drupalcommerce/demo-project -s dev  --no-interaction\ndrush sql-drop\ndrush cr\nddev restart\n</code></pre>"},{"location":"desarrollo/drupal/Instalacion-drupal-commerce-demo-con-ddev/#instalacion-desde-el-navegador","title":"Instalaci\u00f3n desde el navegador","text":"<p>https://$SITE_NAME.ddev.site</p> <p></p>"},{"location":"desarrollo/drupal/Instalacion-drupal-commerce-demo-con-ddev/#mailhog","title":"MailHog","text":"<p>http://$SITE_NAME.ddev.site:8025</p>"},{"location":"desarrollo/drupal/Instalacion-drupal-commerce-demo-con-ddev/#phpmyadmin","title":"PhpMyAdmin","text":"<p>http://$SITE_NAME.ddev.site:8036/</p>"},{"location":"desarrollo/drupal/Instalacion-drupal-commerce-demo-con-ddev/#referencias","title":"Referencias","text":"<ul> <li>https://www.solucionex.com/blog/como-instalar-drupal-commerce-con-subtema-custom</li> <li>https://www.drupal.org/docs/official_docs/en/_local_development_guide.html</li> </ul>"},{"location":"desarrollo/editando_codigo/Tips_vscode/","title":"Trucos para Visual Studio Code","text":""},{"location":"desarrollo/editando_codigo/Tips_vscode/#atajos-de-teclado","title":"Atajos de teclado","text":"<pre><code>Ctrl + u:               Convertir a May\u00fasculas / Min\u00fasculas.\nCtrl + k + c:           Comentar bloque.\nCtrl + k + u:           Descimentar. \nAlt + Arriba/Abajo:     Mover linea o bloque.\nCtrl + k + f:           Formatear bloque.\nShift + Alt + Flechas:  Cursor en bloque.\nCtrl + k + x:           Snipers.\nCtrl + Shift + v:       Pegado c\u00edclico.\nCtrl + c:               Copia linea actual.\nCtrl + r + Ctrl + e:    Encapsula.\nCtrl + /                Comenta bloque.\n</code></pre>"},{"location":"desarrollo/editando_codigo/Tips_vscode/#extension-todo-tree","title":"Extensi\u00f3n \"Todo tree\"","text":"<p>Nos permite mostrar un arbol con todos las etiquetas que le especifiquemos.</p> <p>En mi caso me gusta utilizar @todo y @bug en el c\u00f3digo.</p> <p>Una vez instalada modifico la configuraci\u00f3n para que recoja mis etiquetas y modifico la expresi\u00f3n regular que permite encontrarlas.</p> <p>::</p> <pre><code>((//|#|&lt;!--|;|/\\*^| \\*)\\s*($TAGS)|^\\s*- \\[ \\])\n</code></pre>"},{"location":"desarrollo/git/git_submodulos/","title":"Submodulos con git","text":"<p>Tenemos dos formas de a\u00f1adir submodulos.</p>"},{"location":"desarrollo/git/git_submodulos/#1-clonando-primero-el-subproyecto","title":"1. Clonando primero el subproyecto.","text":"<p>Ejemplo:</p> <p>Nos situamos en el directorio donde queremos clonar el proyecto.</p> <p>Clonamos:</p> <pre><code>git clone git@gitlab.com:edumag/lesolivex-wt.git lesolivex\n</code></pre> <p>Pedimos a git que inicialice los submodulos autom\u00e1ticamente.</p> <pre><code>git submodules init\n</code></pre> <p>Actualizamos submodulos.</p> <p>Para actualizar un submodulo deberemos hacerlo desde su directorio con:</p> <pre><code>git fetch &amp;&amp; git pull.\n</code></pre> <p>No confundirse con el comando:</p> <pre><code>git submodules update\n</code></pre> <p>En este caso estariamos forzando al submodulo a volver a la versi\u00f3n anterior en la que lo instalamos.</p>"},{"location":"desarrollo/git/git_submodulos/#2-anadimos-desde-cero","title":"2. A\u00f1adimos desde cero.","text":"<p>Ejemplo:</p> <pre><code>git submodule add git@gitlab.com:edumag/lesolivex-wt.git wp-content/themes/lesolivex\n</code></pre>"},{"location":"desarrollo/git/git_submodulos/#referencias","title":"Referencias","text":"<ul> <li>https://www.git-scm.com/book/es/v2/Herramientas-de-Git-Subm%C3%B3dulos</li> </ul>"},{"location":"desarrollo/joomla/joomla-local-1-minuto/","title":"Instalaci\u00f3n local de joomla en 1 minuto con docker","text":"<p>Esta es una de las maravillas de docker.</p> <p>En un minuto tienes una instancia funcionando y preparada para comenzar a programar tu nuevo m\u00f3dulo.</p>"},{"location":"desarrollo/joomla/joomla-local-1-minuto/#primer-paso","title":"Primer paso","text":"<p>Creamos fichero docker-compose.yml</p> <pre><code>version: '3.1'\n\nservices:\n  joomla:\n    image: joomla\n    links:\n      - joomladb:mysql\n    ports:\n      - 8080:80\n    volumes:\n      - \"./www:/var/www/html\"\n    environment:\n      JOOMLA_DB_HOST: joomladb\n      JOOMLA_DB_PASSWORD: example\n\n  joomladb:\n    image: mysql:5.6\n    volumes:\n      - \"./db:/var/lib/mysql\"\n    environment:\n      MYSQL_ROOT_PASSWORD: example\n\nvolumes:\n  db:\n  www:\n</code></pre>"},{"location":"desarrollo/joomla/joomla-local-1-minuto/#segundo-paso","title":"Segundo paso","text":"<p>Ejecutamos docker-comnpose-</p> <pre><code>docker-compose up\n</code></pre> <p>As\u00ed de r\u00e1pido, as\u00ed de f\u00e1cil.</p> <p>Ya podemos ir a http://localhost:8080/ y tenemos nuestro joomla.</p>"},{"location":"desarrollo/laravel/Laravel-ddev/","title":"Entorno de desarrollo laravel en 5m con ddev","text":"<p>Vamos a mostrar como tener un entorno de desarrollo en local con laravel en menos de 5 m\u00ednutos.</p> <p>Para ello vamos a utilizar ddev una peque\u00f1a pero potente herramienta que nos permite tener nuestro entorno de desarrollo:</p> <ul> <li>Servidor encriptado.</li> <li>MariaDB.</li> <li>Instancia de phpMyAdmin</li> <li>Servidor MailHog (Verificaci\u00f3n de correos electr\u00f3nicos).</li> </ul> <p>Vamos a ello.</p>"},{"location":"desarrollo/laravel/Laravel-ddev/#instalacion-de-ddev","title":"Instalaci\u00f3n de ddev","text":"<p>Bajamos e instalamos ddev.</p> <pre><code>curl -L https://raw.githubusercontent.com/drud/ddev/master/scripts/install_ddev.sh | bash\n</code></pre>"},{"location":"desarrollo/laravel/Laravel-ddev/#instalacion-de-mkcert","title":"Instalaci\u00f3n de mkcert","text":"<p>mkcert nos permite tener certificados SSL en local.</p> <pre><code>wget https://github.com/FiloSottile/mkcert/releases/download/v1.1.2/mkcert-v1.1.2-linux-amd64\nmv mkcert-v1.1.2-linux-amd64 mkcert\nchmod +x mkcert\nsudo cp mkcert /usr/local/bin/\nmkcert -install\n</code></pre>"},{"location":"desarrollo/laravel/Laravel-ddev/#configuracion-de-proyecto","title":"Configuraci\u00f3n de proyecto","text":"<p>En caso de tener ya nuestro proyecto en laravel entramos en su carpeta.</p> <pre><code>ddev config --project-type=laravel --project-name=$PROYECTO --docroot=public\nddev start\n</code></pre> <p>En caso de iniciar un proyecto desde cero.</p> <pre><code>ddev config --project-type=laravel --project-name=$PROYECTO --docroot=public --create-docroot\nddev start\nddev composer create --prefer-dist laravel/laravel\nddev composer install\n</code></pre>"},{"location":"desarrollo/laravel/Laravel-ddev/#conexion-con-la-base-de-datos","title":"Conexi\u00f3n con la base de datos","text":"<p>Si a\u00fan no tenemos fichero de configuraci\u00f3n .env podemos ejecutar este comando para hacer la conexi\u00f3n con la base de datos.</p> <pre><code>ddev exec \"cat .env.example | sed  -E 's/DB_(HOST|DATABASE|USERNAME|PASSWORD)=(.*)/DB_\\1=db/g' &gt; .env\"\n</code></pre> <p>Si lo preferimos podemos hacerlo a mano editando el fichero <code>.env</code>.</p> <pre><code>DB_CONNECTION=mysql\nDB_HOST=db\nDB_PORT=3306\nDB_DATABASE=db\nDB_USERNAME=db\nDB_PASSWORD=db\n</code></pre>"},{"location":"desarrollo/laravel/Laravel-ddev/#puesta-en-marcha","title":"Puesta en marcha.","text":"<pre><code>chmod +x artisan\nddev exec ./artisan key:generate\nddev exec ./artisan migrate:fresh --seed\n</code></pre>"},{"location":"desarrollo/laravel/Laravel-ddev/#depuracion-con-vscode","title":"Depuraci\u00f3n con vscode","text":"<p>Instalamos la extensi\u00f3n php-debug en vscode.</p> <p>Configuraci\u00f3n:</p> <pre><code>{\n    // Use IntelliSense para saber los atributos posibles.\n    // Mantenga el puntero para ver las descripciones de los existentes atributos.\n    // Para m\u00e1s informaci\u00f3n, visite: https://go.microsoft.com/fwlink/?linkid=830387\n    \"version\": \"0.2.0\",\n    \"configurations\": [\n        {\n            \"name\": \"Listen for XDebug\",\n            \"type\": \"php\",\n            \"request\": \"launch\",\n            \"port\": 9000,\n            \"hostname\": \"0.0.0.0\",\n            \"pathMappings\": {\n                \"/var/www/html\": \"${workspaceRoot}\"\n            }\n        },\n        {\n            \"name\": \"Launch currently open script\",\n            \"type\": \"php\",\n            \"request\": \"launch\",\n            \"program\": \"${file}\",\n            \"cwd\": \"${fileDirname}\",\n            \"port\": 9000\n        }\n    ]\n}\n</code></pre>"},{"location":"desarrollo/laravel/Laravel-ddev/#ddev-describe","title":"ddev describe","text":"<pre><code>NAME    TYPE     LOCATION             URL                       STATUS\n$PROYECTO  laravel  ~/desarrollo/$PROYECTO  https://$PROYECTO.ddev.site  running\n\nProject Information\n-------------------\nPHP version:        7.3\nNFS mount enabled:  false\nDatabase type:      mariadb\nMariaDB version:    10.2\n\nURLs\n----\nhttps://$PROYECTO.ddev.site\nhttps://127.0.0.1:32773\nhttp://$PROYECTO.ddev.site\nhttp://127.0.0.1:32774\n\nMySQL/MariaDB Credentials\n-------------------------\nUsername: \"db\", Password: \"db\", Default database: \"db\"\n\nor use root credentials when needed: Username: \"root\", Password: \"root\"\n\nDatabase hostname and port INSIDE container: db:3306\nTo connect to db server inside container or in project settings files:\nmysql --host=db --user=db --password=db --database=db\nDatabase hostname and port from HOST: 127.0.0.1:32772\nTo connect to mysql from your host machine,\nmysql --host=127.0.0.1 --port=32772 --user=db --password=db --database=db\n\nOther Services\n--------------\nMailHog (https):    https://$PROYECTO.ddev.site:8026\nMailHog:            http://$PROYECTO.ddev.site:8025\nphpMyAdmin (https): https://$PROYECTO.ddev.site:8037\nphpMyAdmin:         http://$PROYECTO.ddev.site:8036\n\nDDEV ROUTER STATUS: healthy\nssh-auth status: healthy\n\n</code></pre>"},{"location":"desarrollo/laravel/laravel-roles-permisos-grupos-laratrust/","title":"Gesti\u00f3n de roles y permisos para grupos desde laravel con laratrust","text":"<p>Utilizamos el paquete laratrust para poder gestionar roles por grupos.</p> <p>Roles por defecto:</p> <ul> <li>Super admin superadmin</li> <li>Vendor vendor</li> <li>Admin group admin-group</li> <li>User group user-group</li> </ul> <p>Permisos:</p> <ul> <li>delete_products Delete products</li> <li>publish_products Publish products</li> <li>unpublish_products Unpublish products</li> <li>make_orders Make orders</li> </ul> <p>Cada vez que asignamos un rol a un usuario tenemos que especificar el grupo (rotlle), de esta manera un mismo usuario puede tener diferentes roles en cada grupo.</p> <p>Referencias:</p> <ul> <li>https://laratrust.santigarcor.me/docs/6.x/</li> </ul>"},{"location":"desarrollo/laravel/laravel-roles-permisos-grupos-laratrust/#instalacion","title":"Instalaci\u00f3n","text":"<pre><code>composer require santigarcor/laratrust\n\nphp artisan laratrust:setup\n\ncomposer dump-autoload\n\nphp artisan migrate\n</code></pre>"},{"location":"desarrollo/laravel/laravel-roles-permisos-grupos-laratrust/#configuracion-configlaratrustphp","title":"Configuraci\u00f3n (config/laratrust.php):","text":"<p>En mi caso relaciono los equipos con los Rotlles :</p> <pre><code>'models' =&gt; [\n\n    'role' =&gt; AppRole::class,\n\n    'permission' =&gt; AppPermission::class,\n\n    /**\n     * Will be used only if the teams functionality is enabled.\n     */\n    'team' =&gt; AppRotlle::class,\n</code></pre> <p>Activamos teams</p> <pre><code>'teams' =&gt; [\n    'enabled' =&gt; true,\n    ...\n</code></pre>"},{"location":"desarrollo/laravel/laravel-roles-permisos-grupos-laratrust/#desde-las-migraciones-creamos-el-contenido-por-defecto","title":"Desde las migraciones creamos el contenido por defecto","text":"<pre><code>class CreateInitContent extends Migration\n{\n    /**\n     * Run the migrations.\n     *\n     * @return void\n     */\n    public function up()\n    {\n        // Create users default.\n        User::create([\n            'name' =&gt; 'Admin',\n            'username' =&gt; 'admin',\n            'email' =&gt; 'admin@example.com',\n            'password' =&gt; bcrypt('admin')\n        ]);\n\n        // Demo rotlle.\n        $this-&gt;copyImageDemo('demo-rotlle.jpg', public_path('images/rotlles'), public_path('images/demo/rotlles'));\n        Rotlle::create([\n            'name' =&gt; 'Demo Rotlle',\n            'status' =&gt; 1,\n            'description' =&gt; 'Demo group with demo content to allow to see the functionalities of the application.',\n            'image' =&gt; 'demo-rotlle.jpg'\n        ]);\n\n        // User admin with rotlle demo.\n        $admin = user::where('id',1)-&gt;first();\n        $admin-&gt;rotlles()-&gt;attach(1);\n\n        // Roles and permissions default.\n\n        // Reset cached roles and permissions\n        $this-&gt;truncateLaratrustTables();\n\n        $roleAdmin = AppRole::firstOrCreate([\n            'name' =&gt; 'superadmin',\n            'display_name' =&gt; 'Super admin',\n            'description' =&gt; 'All permissions'\n        ]);\n\n        // Create default permissions.\n        $edit_products      = Permission::create(['name' =&gt; 'edit_products', 'display_name' =&gt; 'Edit products', 'description' =&gt; 'Edit products']);\n        $delete_products    = Permission::create(['name' =&gt; 'delete_products', 'display_name' =&gt; 'Delete products', 'description' =&gt; 'Delete products']);\n        $publish_products   = Permission::create(['name' =&gt; 'publish_products', 'display_name' =&gt; 'Publish products', 'description' =&gt; 'Publish products']);\n        $unpublish_products = Permission::create(['name' =&gt; 'unpublish_products', 'display_name' =&gt; 'Unpublish products', 'description' =&gt; 'Unpublish products']);\n        $make_orders        = Permission::create(['name' =&gt; 'make_orders', 'display_name' =&gt; 'Make orders', 'description' =&gt; 'Make orders']);\n\n        // Create roles and assign existing permissions.\n        $vendor = Role::create(['name' =&gt; 'vendor', 'display_name' =&gt; 'Vendor', 'description' =&gt; 'Vendor']);\n        $vendor-&gt;syncPermissions([$edit_products, $delete_products, $unpublish_products]); \n        $admin_group = Role::create(['name' =&gt; 'admin-group', 'display_name' =&gt; 'Admin group', 'description' =&gt; 'Admin group']);\n        $admin_group-&gt;syncPermissions([$publish_products, $unpublish_products, $make_orders, $edit_products, $delete_products]); \n        $user_group = Role::create(['name' =&gt; 'user-group', 'display_name' =&gt; 'User group', 'description' =&gt; 'User group']);\n        $user_group-&gt;syncPermissions([$make_orders]); \n\n        // Assign roles to users.\n        $adminUser = User::where('id',1)-&gt;first();\n        $adminUser-&gt;attachRole($roleAdmin);\n</code></pre>"},{"location":"desarrollo/laravel/laravel-roles-permisos-grupos-laratrust/#ejemplos-de-politicas","title":"Ejemplos de pol\u00edticas","text":"<p>app/Policies/RotllePolicy.php</p> <pre><code>public function make_orders()\n{\n    $rotlleName = session('rotlleName');\n\n    if (auth()-&gt;user()-&gt;isAbleTo('make_orders', $rotlleName)) {\n        return True;\n    }\n}\n</code></pre> <p>app/Policies/ProductPolicy.php</p> <pre><code>public function publish_products(User $user)\n{\n    $rotlleName = session('rotlleName');\n\n    if ($user-&gt;isAbleTo('publish_products', $rotlleName)) {\n        return True;\n    }\n\n}\n</code></pre>"},{"location":"desarrollo/laravel/laravel-roles-permisos-grupos-laratrust/#desde-el-controlador-comprobamos-permisos","title":"Desde el controlador comprobamos permisos","text":"<pre><code>public function index(Rotlle $rotlle)\n{\n\n    $this-&gt;authorize('make_orders', $rotlle);\n    $products = Product::paginate();\n\n    return view('products.index', compact('products'));\n}\n</code></pre>"},{"location":"desarrollo/laravel/laravel-roles-permisos-grupos-laratrust/#desde-la-plantilla-blade","title":"Desde la plantilla blade","text":"<pre><code>@can('edit_products', $product)\n    &lt;a href=\"{{ route('products.edit', $product-&gt;id) }}\" \n    class=\"btn btn-sm btn-success\"&gt;\n        editar\n    &lt;/a&gt;\n    &lt;form style=\"display: inline;\" action=\"{{ route('products.destroy', $product-&gt;id) }}\" method=\"POST\"&gt;\n        @method('DELETE')\n        @csrf\n        &lt;button class=\"btn btn-sm btn-danger\"&gt;\n            Eliminar\n        &lt;/button&gt;\n    &lt;/form&gt;\n@endcan\n</code></pre> <pre><code>@can('publish_products', 'AppProduct')\n&lt;a style=\"float: right;\" href=\"{{ route('products.create') }}\" \nclass=\"btn btn-sm btn-primary pull-right\"&gt;\n    Crear\n&lt;/a&gt;\n@endcan\n</code></pre>"},{"location":"desarrollo/laravel/laravel-varios/","title":"Laravel (Varios)","text":""},{"location":"desarrollo/laravel/laravel-varios/#migraciones","title":"Migraciones.","text":"<pre><code>ddev exec php artisan migrate:reset --seed\n</code></pre>"},{"location":"desarrollo/laravel/laravel-varios/#anadir-componentes-a-mano","title":"A\u00f1adir componentes a mano.","text":"<p>Si a\u00f1adimos componentes a mano sin utilizar artisan es necesario ejecutar:</p> <pre><code>ddev composer dump-autoload\n</code></pre> <p>De esta manera ser\u00e1 reconocido.</p>"},{"location":"desarrollo/laravel/laravel-varios/#borrar-cache","title":"Borrar cache.","text":"<pre><code>php artisan optimize:clear\n</code></pre>"},{"location":"desarrollo/wordpress/Polylang_extras/","title":"Wordpress polylang extas","text":"<p>Polylang es un plugin de wordpress que nos permite tener m\u00e1s de un idioma en nuestra p\u00e1gina.</p> <p>Es gratuito pero a la vez bastante limitado.</p> <p>Con este truco vamos a poder copiar todo el contenido de nuestras entradas al traducirlas haci\u00e9ndonos un poco m\u00e1s comodo el trabajo.</p> <p>Har\u00e1 falta que a\u00f1ad\u00e1is el c\u00f3digo en el fichero functions.php de vuestro tema.</p> <pre><code>/**\n * Duplica contenido al traducir entrada.\n * Realizado por:\n * https://junaidbhura.com/make-polylang-wordpress-plugin-copy-the-content-from-the-original-post/\n */\nfunction jb_editor_content( $content ) {\n    // Polylang sets the 'from_post' parameter\n    if ( isset( $_GET['from_post'] ) ) {\n        $my_post = get_post( $_GET['from_post'] );\n        if ( $my_post )\n            return $my_post-&gt;post_content;\n    }\n\n    return $content;\n}\nadd_filter( 'default_content', 'jb_editor_content' );\n\n/**\n * Duplica t\u00edtulo al traducir entrada.\n * Realizado por:\n * https://junaidbhura.com/make-polylang-wordpress-plugin-copy-the-content-from-the-original-post/\n */\nfunction jb_editor_title( $title ) {\n    // Polylang sets the 'from_post' parameter\n    if ( isset( $_GET['from_post'] ) ) {\n        $my_post = get_post( $_GET['from_post'] );\n        if ( $my_post )\n            return $my_post-&gt;post_title;\n    }\n\n    return $title;\n}\nadd_filter( 'default_title', 'jb_editor_title' );\n</code></pre>"},{"location":"desarrollo/wordpress/VimWordpress/","title":"VimWordpress","text":"<p>\"=========== Meta ============ \"StrID : 1267 \"Title : Vim Wordpress MarkDown \"Slug  : vim-wordpress-markdown \"Cats  : MarkDown, Vim, Wordpress \"Tags  :  \"============================= \"EditType   : post \"EditFormat : HTML \"BlogAddr   : https://lesolivex.com \"========== Content ==========</p>"},{"location":"desarrollo/wordpress/VimWordpress/#instalar","title":"Instalar","text":"<p>VimWordpress</p> <p>En mi caso lo instalo con VundleVim desde .vimrc:</p> <pre><code>\" VimWordperss\nPlugin 'mrpeterlee/VimWordpress'\n</code></pre> <p>Algunos ejemplos:</p> <ul> <li>:BlogList - Lista las 30 entradas m\u00e1s recientes.</li> <li>:BlogList page - Lista las 30 p\u00e1ginas m\u00e1s recientes.</li> <li>:BlogList post 100 - Lista las 100 entradas m\u00e1s recientes.</li> <li>:BlogNew post - Nueva entrada. :BlogNew page - Nueva p\u00e1gina.</li> <li>:BlogSave - Graba. Aunque la documentaci\u00f3n dice que por defecto graba como publicado, en mi caso graba como borrador.</li> <li>:BlogSave draft - Graba como borrador.</li> <li>:BlogPreview local - Previa local de la entrada o p\u00e1gina.</li> <li>:BlogPreview publish - como \u2018</li> <li>:BlogSave publish\u2019 con navegador abierto.</li> </ul> <p>Distintas formas de abrir una entrada existente:</p> <ul> <li>:BlogOpen 679</li> <li>:BlogOpen http://your-first-blog.com/archives/679</li> <li>:BlogOpen http://your-second-blog.com/?p=679</li> <li>:BlogOpen http://your-third-blog.com/with-your-custom-permalink</li> </ul>"},{"location":"desarrollo/wordpress/VimWordpress/#referencias","title":"Referencias","text":"<ul> <li>https://www.cyberhades.com/2012/05/11/vim-markdown-y-wordpress/</li> </ul>"},{"location":"desarrollo/wordpress/postinstalacion_wordpress_con_dokku/","title":"Post instalaci\u00f3n de wordpress","text":""},{"location":"desarrollo/wordpress/postinstalacion_wordpress_con_dokku/#jetpack","title":"Jetpack","text":""},{"location":"desarrollo/wordpress/postinstalacion_wordpress_con_dokku/#activamos-jetpacks-site-accelerator","title":"Activamos \"Jetpack's site accelerator\"","text":"<p>Improve your site's performance and speed Activate Jetpack's site accelerator to load pages faster, optimize your images, and serve your images and static files (like CSS and JavaScript) from our global network of servers.</p>"},{"location":"desarrollo/wordpress/postinstalacion_wordpress_con_dokku/#activamos-downtime-monitoring","title":"Activamos \"Downtime monitoring\"","text":"<p>En caso de caer la web nos enviar\u00e1 un mensaje de correo.</p>"},{"location":"desarrollo/wordpress/postinstalacion_wordpress_con_dokku/#activamos-sharing-buttons","title":"Activamos \"Sharing buttons\"","text":""},{"location":"desarrollo/wordpress/postinstalacion_wordpress_con_dokku/#copias-de-seguridad","title":"Copias de seguridad.","text":""},{"location":"desarrollo/wordpress/postinstalacion_wordpress_con_dokku/#updraftplus","title":"updraftplus","text":"<p>https://es.wordpress.org/plugins/updraftplus/</p> <p>Haz copias de seguridad directamente en la nube a Dropbox, Google Drive, Amazon S3 (o compatible), Rackspace Cloud, DreamObjects, FTP, Openstack Swift, Updraft Vault y por correo electr\u00f3nico. La versi\u00f3n de pago tambi\u00e9n hace copias de seguridad a Microsoft OneDrive, Microsoft Azure, Google Cloud Storage, Backblaze B2, SFTP, SCP y WebDAV.</p> <p>Configuramos copia semanal.</p>"},{"location":"desarrollo/wordpress/postinstalacion_wordpress_con_dokku/#plugin-de-idiomas","title":"Plugin de idiomas.","text":"<p>Activamos polylang y a\u00f1adimos catal\u00e1n, castellano e ingles.</p>"},{"location":"desarrollo/wordpress/postinstalacion_wordpress_con_dokku/#formulario-de-contacto","title":"Formulario de contacto.","text":"<p>Instalamos Contact Form 7 Contact From 7 captcha.</p> <p>Y activamos recaptcha v2 desde la secci\u00f3n de integraci\u00f3n de la extensi\u00f3n.</p> <p>Hacer formularios personalizados seg\u00fan idioma.</p>"},{"location":"desarrollo/wordpress/postinstalacion_wordpress_con_dokku/#smtp","title":"SMTP","text":"<p>Instalamos plugin Gmail SMTP y configuramos.</p>"},{"location":"desarrollo/wordpress/postinstalacion_wordpress_con_dokku/#anti-spam","title":"Anti-spam","text":"<p>Instalamos y activamos plugin \"Anti-spam\".</p>"},{"location":"desarrollo/wordpress/postinstalacion_wordpress_con_dokku/#redes-sociales","title":"Redes sociales.","text":"<p>Instalamos \"Feed them social\" que nos permite visualizar las \u00faltimas entradas de nuestras redes.</p> <p>Instalamos \"Easy Social Icons\" para mostrar los botones para seguirnos en nuestras redes.</p>"},{"location":"desarrollo/wordpress/postinstalacion_wordpress_con_dokku/#referencias","title":"Referencias:","text":"<ul> <li>funtor.com</li> </ul>"},{"location":"desarrollo/wordpress/wordpress_con_dokku/","title":"Wordpress con dokku","text":"<p>Actualizaci\u00f3n: abril del 2020</p>"},{"location":"desarrollo/wordpress/wordpress_con_dokku/#vps","title":"VPS","text":"<p>Contratamos maquina virtual con OVH.</p> <p>Al entrar nos muestra mensaje de error:</p> <pre><code>warning: setlocale: LC_ALL: cannot change locale (es_ES.UTF-8)\n</code></pre> <p>Entramos por ssh y configuramos locales.</p> <pre><code>sudo dpkg-reconfigure locales\n</code></pre> <p>Configuramos los DNS para que nuestro dominio apunte al servidor.</p> <p>Tipo A, Host: @, TUIP, TTL: 900 Tipo A, Subdominios: *</p>"},{"location":"desarrollo/wordpress/wordpress_con_dokku/#instalacion","title":"Instalaci\u00f3n","text":"<p>Seguimos documentaci\u00f3n de dokku </p> <pre><code>wget https://raw.githubusercontent.com/dokku/dokku/v0.17.9/bootstrap.sh\nsudo DOKKU_TAG=v0.17.9 bash bootstrap.sh\n</code></pre> <p>http://IP_DE_LA_MAQUINA</p> <p>Copiamos nuestra clave p\u00fablica desde nuestro local en .ssh/id_rsa.pub en el formulario y guardamos.</p> <p>Dokku instalado!!!!</p>"},{"location":"desarrollo/wordpress/wordpress_con_dokku/#instalacion-wordpress","title":"Instalaci\u00f3n wordpress","text":""},{"location":"desarrollo/wordpress/wordpress_con_dokku/#desde-maquina-virtual","title":"Desde maquina virtual","text":"<pre><code>sudo dokku plugin:install https://github.com/dokku/dokku-mysql.git mysql\nsudo dokku plugin:install https://github.com/dokku/dokku-letsencrypt.git\n\ndokku apps:create TUDOMINIO\ndokku domains:add TUDOMINIO TUDOMINIO.com\ndokku domains:add TUDOMINIO www.TUDOMINIO.com\ndokku mysql:create gmdb\n</code></pre> <p>Creamos vol\u00famenes:</p> <pre><code>sudo mkdir -p /var/lib/dokku/data/storage/TUDOMINIO/uploads\n\nsudo chmod -R 755 /var/lib/dokku/data/storage/\n\ndokku storage:mount TUDOMINIO /var/lib/dokku/data/storage/TUDOMINIO/uploads/:/app/wp-content/uploads/\n</code></pre>"},{"location":"desarrollo/wordpress/wordpress_con_dokku/#conexion-con-base-de-datos-en-dokku","title":"Conexi\u00f3n con base de datos en dokku","text":"<pre><code>dokku mysql:link gmdb TUDOMINIO\n</code></pre> <p>Creado el enlace entre la aplicaci\u00f3n y el servicio de la base de datos, tendremos en el fichero /home/dokku/TUDOMINIO/ENV de la aplicaci\u00f3n la informaci\u00f3n para conectar con ella en forma de variable de entorno que aprovecharemos m\u00e1s adelante para recoger y conectar con la base de datos.</p>"},{"location":"desarrollo/wordpress/wordpress_con_dokku/#desde-local","title":"Desde local","text":"<p>Debemos tener una instancia de wordpress en local.</p> <p>Para ello puedes ver el post Wordpress en local don docker</p> <p>Nos situamos en la carpeta donde tenemos nuestro wordpress local, en mi caso la carpeta html  y creamos .gitignore con el siguiente contenido:</p> <pre><code>.heroku/\n.profile.d/\n.composer/\n.builders_run\n.release\n*.log\n*.swp\n*.back\n*.bak\n*.sql\n*.sql.gz\n~*\n.htaccess\n.maintenance\nwp-content/blogs.dir/\nwp-content/upgrade/\nwp-content/backup-db/\nwp-content/cache/\nwp-content/backups/\nwp-content/uploads/\nsecret/\n/vendor/\n# En mi caso a\u00f1ado.\n.magtrabajos\n</code></pre> <p>Nota</p> <p>: En caso de tener problemas de permisos con la carpeta local de wordpress podeis ejecutar el siguiente comando: sudo chown -R www-data:$USER html/</p> <p>Creamos compser.json:</p> <pre><code>{\n  \"require\": {\n    \"php\": \"~7\",\n    \"ext-mbstring\" : \"*\",\n    \"ext-gd\": \"*\"\n  },\n  \"scripts\": {\n    \"post-install-cmd\": [\n      \"chmod -R 777 wp-content\"\n    ]\n  }\n}\n</code></pre> <p>Creamos fichero nginx_app.conf:</p> <pre><code># WordPress permalinks                                                          \nlocation / {                                                                    \n  index index.php index.html;                                                   \n  try_files $uri $uri/ /index.php?$args;                                        \n}  \n\n# Add trailing slash to */wp-admin requests.                                    \nrewrite /wp-admin$ $scheme://$host$uri/ permanent;                              \n\n# Deny access to any files with a .php extension in the uploads directory       \n# Works in sub-directory installs and also in multisite network                 \nlocation ~* /(?:uploads|files)/.*.php$ {                                        \n  deny all;                                                                     \n}                                                                               \n\n#upload                                                                         \nclient_max_body_size 100M;                                                      \n\n#jetpack connection                                                             \nfastcgi_buffers 8 32k;                                                          \nfastcgi_buffer_size 64k;                                                        \nproxy_buffer_size 128k;                                                         \nproxy_buffers 4 256k;                                                           \nproxy_busy_buffers_size 256k;                                                   \nproxy_read_timeout 300;\n\n# enable gzip compression                                                       \ngzip on;                                                                        \n# Minimum file size in bytes (really small files aren\u2019t worth compressing)      \ngzip_min_length 1000;                                                           \n# Compression level, 1-9                                                        \ngzip_comp_level 2;                                                              \ngzip_buffers 4 32k;                                                             \ngzip_types text/plain application/javascript text/xml text/css image/svg+xml;   \n# Insert `Vary: Accept-Encoding` header, as specified in HTTP1.1 protocol       \ngzip_vary on;                                                                   \n# end gzip configuration                                                        \n\n# Set time to expire for headers on assets                                      \nlocation ~* .(js|css|png|jpg|jpeg|gif|ico|svg)$ {                               \n  expires 1y;                                                                   \n}                                                                               \n\n# Sitemap url, for WordPress SEO plugin                                         \n#rewrite ^/sitemap_index.xml$ /index.php?sitemap=1 last;                        \n#rewrite ^/([^/]+?)-sitemap([0-9]+)?.xml$ /index.php?sitemap=$1&amp;sitemap_n=$2 last;\n\n# Global restrictions configuration file.\n# Designed to be included in any server {} block.\nlocation = /favicon.ico {\n log_not_found off;\n access_log off;\n}\n\nlocation = /robots.txt {\n allow all;\n log_not_found off;\n access_log off;\n}\n\n# Deny all attempts to access hidden files such as .htaccess, .htpasswd, .DS_Store (Mac).\n# Keep logging the requests to parse later (or to pass to firewall utilities such as fail2ban)\nlocation ~ /\\. {\n deny all;\n}\n\n# Deny access to any files with a .php extension in the uploads directory\n# Works in sub-directory installs and also in multisite network\n# Keep logging the requests to parse later (or to pass to firewall utilities such as fail2ban)\nlocation ~* /(?:uploads|files)/.*\\.php$ {\n deny all;\n}\n\n# Add trailing slash to */wp-admin requests.\nrewrite /wp-admin$ $scheme://$host$uri/ permanent;\n\n# Directives to send expires headers and turn off 404 error logging.\nlocation ~* ^.+\\.(ogg|ogv|svg|svgz|eot|otf|woff|mp4|ttf|rss|atom|jpg|jpeg|gif|png|ico|zip|tgz|gz|rar|bz2|doc|xls|exe|ppt|tar|mid|midi|wav|bmp|rtf)$ {\n access_log off; log_not_found off; expires max;\n}\n\n</code></pre> <p>Creamos fichero custom_php.ini</p> <pre><code>upload_max_filesize = 50M\npost_max_size = 50M\n</code></pre> <p>Creamos fichero Procfile:</p> <pre><code>web: vendor/bin/heroku-php-nginx -C nginx_app.conf -i custom_php.ini --verbose\n</code></pre> <p>Lanzamos composer update para que nos genere el composer.lock.</p> <pre><code>composer update\n</code></pre> <p>Iniciamos git y a\u00f1adimos repositorio de dokku y subimos proyecto.</p> <pre><code>git init\ngit remote add dokku dokku@TUDOMINIO.com:TUDOMINIO\ngit add .\ngit commit -am 'Init'\ngit push dokku master\n</code></pre> <p>En estos momentos tenemos la aplicaci\u00f3n funcionando pero el fichero wp.config.php de wordpress contiene la configuraci\u00f3n local y nos da error de conexi\u00f3n.</p> <p>Vamos a modificar el fichero wp-config.php por el del proyecto dokku-wordpress que nos permite coger la configuraci\u00f3n de las variables de entorno y en local coger\u00e1 las que tengamos en el fichero por defecto.</p> <p>Contenido de wp-config.php:</p> <pre><code>&lt;?php\n/**\n * The base configuration for WordPress\n *\n * The wp-config.php creation script uses this file during the\n * installation. You don't have to use the web site, you can\n * copy this file to \"wp-config.php\" and fill in the values.\n *\n * This file contains the following configurations:\n *\n * * MySQL settings\n * * Secret keys\n * * Database table prefix\n * * ABSPATH\n *\n * @link https://codex.wordpress.org/Editing_wp-config.php\n *\n * @package WordPress\n */\n\nfunction fromenv($key, $default = null) {\n  $value = getenv($key);\n  if ($value === false) {\n    $value = $default;\n  }\n  return $value;\n}\n\n$DSN = parse_url(fromenv('DATABASE_URL', 'mysql://username_here:password_here@localhost:3306/database_name_here'));\n\n// ** MySQL settings - You can get this info from your web host ** //\n/** The name of the database for WordPress */\ndefine('DB_NAME', substr($DSN['path'], 1));\n\n/** MySQL database username */\ndefine('DB_USER', $DSN['user']);\n\n/** MySQL database password */\ndefine('DB_PASSWORD', $DSN['pass']);\n\n/** MySQL hostname */\ndefine('DB_HOST', $DSN['host']);\n\n/** Database Charset to use in creating database tables. */\ndefine('DB_CHARSET', 'utf8');\n\n/** The Database Collate type. Don't change this if in doubt. */\ndefine('DB_COLLATE', '');\n\n/**#@+\n * Authentication Unique Keys and Salts.\n *\n * Change these to different unique phrases!\n * You can generate these using the {@link https://api.wordpress.org/secret-key/1.1/salt/ WordPress.org secret-key service}\n * You can change these at any point in time to invalidate all existing cookies. This will force all users to have to log in again.\n *\n * @since 2.6.0\n */\ndefine('AUTH_KEY',         fromenv('AUTH_KEY', 'put your unique phrase here'));\ndefine('SECURE_AUTH_KEY',  fromenv('SECURE_AUTH_KEY', 'put your unique phrase here'));\ndefine('LOGGED_IN_KEY',    fromenv('LOGGED_IN_KEY', 'put your unique phrase here'));\ndefine('NONCE_KEY',        fromenv('NONCE_KEY', 'put your unique phrase here'));\ndefine('AUTH_SALT',        fromenv('AUTH_SALT', 'put your unique phrase here'));\ndefine('SECURE_AUTH_SALT', fromenv('SECURE_AUTH_SALT', 'put your unique phrase here'));\ndefine('LOGGED_IN_SALT',   fromenv('LOGGED_IN_SALT', 'put your unique phrase here'));\ndefine('NONCE_SALT',       fromenv('NONCE_SALT', 'put your unique phrase here'));\n\n/**#@-*/\n\n/**\n * WordPress Database Table prefix.\n *\n * You can have multiple installations in one database if you give each\n * a unique prefix. Only numbers, letters, and underscores please!\n */\n$table_prefix  = fromenv('TABLE_PREFIX', 'wp_');\n\n/**\n * For developers: WordPress debugging mode.\n *\n * Change this to true to enable the display of notices during development.\n * It is strongly recommended that plugin and theme developers use WP_DEBUG\n * in their development environments.\n *\n * For information on other constants that can be used for debugging,\n * visit the Codex.\n *\n * @link https://codex.wordpress.org/Debugging_in_WordPress\n */\ndefine('WP_DEBUG', (bool)fromenv('WP_DEBUG', false));\n\n// If we're behind a proxy server and using HTTPS, we need to alert Wordpress of that fact\n// see also http://codex.wordpress.org/Administration_Over_SSL#Using_a_Reverse_Proxy\nif ( isset($_SERVER['HTTP_X_FORWARDED_PROTO'] )\n    &amp;&amp; $_SERVER['HTTP_X_FORWARDED_PROTO'] === 'https' )\n{\n    $_SERVER['HTTPS'] = 'on';\n}\n\n/* That's all, stop editing! Happy blogging. */\n\n/** Absolute path to the WordPress directory. */\nif ( !defined('ABSPATH') )\n  define('ABSPATH', dirname(__FILE__) . '/');\n\n/** Sets up WordPress vars and included files. */\nrequire_once(ABSPATH . 'wp-settings.php');\n</code></pre>"},{"location":"desarrollo/wordpress/wordpress_con_dokku/#desde-la-web","title":"Desde la web","text":"<p>http://TUDOMINIO.com</p> <p>Y ya podemos hacer la configuraci\u00f3n desde el dominio.</p> <p>Ahora nos faltar\u00e1 como gestionar los cambios que hagamos en local sobre nuestro tema personalizado o nuestros plugins ya que la idea es que wordpress se actualice por si solo desde el servidor.</p>"},{"location":"desarrollo/wordpress/wordpress_con_dokku/#configurar-los-keys-y-salts-de-seguridad","title":"Configurar los keys y salts de seguridad","text":"<p>Vamos a https://api.wordpress.org/secret-key/1.1/salt/ para generar las claves.</p> <p>Y las a\u00f1adimos a la configuraci\u00f3n del proyecto.</p> <pre><code>dokku config:set wp AUTH_KEY='...your key...'\ndokku config:set wp SECURE_AUTH_KEY='...your key...'\ndokku config:set wp LOGGED_IN_KEY='...your key...'\ndokku config:set wp NONCE_KEY='...your key...'\ndokku config:set wp AUTH_SALT='...your key...'\ndokku config:set wp SECURE_AUTH_SALT='...your key...'\ndokku config:set wp LOGGED_IN_SALT='...your key...'\ndokku config:set wp NONCE_SALT='...your key...'\n</code></pre>"},{"location":"desarrollo/wordpress/wordpress_con_dokku/#letsencrypt","title":"Letsencrypt.","text":"<pre><code>dokku config:set --no-restart TUDOMINIO DOKKU_LETSENCRYPT_EMAIL=TUCORREO@TUCORREO.com\ndokku letsencrypt TUDOMINIO\ndokku letsencrypt:auto-renew\ndokku letsencrypt:cron-job --add\n</code></pre>"},{"location":"desarrollo/wordpress/wordpress_con_dokku/#varios","title":"Varios","text":""},{"location":"desarrollo/wordpress/wordpress_con_dokku/#importacion-de-la-base-de-datos","title":"Importaci\u00f3n de la base de datos.","text":"<p>En caso de querer importar nuestra base de datos local dokku.</p> <p>Podemos crear nuestra copia de la base de datos desde adminer.</p> <p>Subimos el fichero al servidor y ejecutamos:</p> <pre><code>cat wordpress.sql | ssh dokku@TUDOMINIO.com mysql:import gmdb &lt; .\n</code></pre> <p>Nota: Tener en cuenta que ser\u00e1 necesario cambiar las urls del fichero antes de importar. Ejemplo: localhost:8002 por TUDOMINIO</p>"},{"location":"desarrollo/wordpress/wordpress_con_dokku/#entrar-a-una-consola-de-un-container","title":"Entrar a una consola de un container:","text":"<pre><code>dokku run APLICACION bash\n</code></pre>"},{"location":"desarrollo/wordpress/wordpress_con_dokku/#lanzar-comandos-de-dokku-desde-local","title":"Lanzar comandos de dokku desde local:","text":"<pre><code>ssh dokku@TUDOMINIO.com help\n</code></pre>"},{"location":"desarrollo/wordpress/wordpress_con_dokku/#logs","title":"Logs.","text":"<p>Errores desde dokku:</p> <pre><code>ssh dokku@lesolivex.com dokku logs:failed menjut\n</code></pre> <p>Logs de acceso:</p> <pre><code>ssh dokku@lesolivex.com dokku logs menjut -t\n</code></pre> <p>Errores en nginx:</p> <pre><code>ssh dokku@lesolivex.com nginx:error-logs menjut -t\n</code></pre> <p>Log de mysql:</p> <pre><code>ssh dokku@lesolivex.com mysql:logs menjutdb -t\n</code></pre>"},{"location":"desarrollo/wordpress/wordpress_con_dokku/#referencias","title":"Referencias:","text":"<ul> <li> <p>playcode, Worpress digitalocean dokku</p> </li> <li> <p>Comunidad dokku</p> </li> <li> <p>V\u00eddeo tutor\u00edas completo</p> </li> <li> <p>sysrun, instalando wordpress sobre dokku</p> </li> <li> <p>Letsencrypt con dokku</p> </li> </ul>"},{"location":"desarrollo/wordpress/wordpress_local/","title":"Wordpress en local con docker","text":"<p>Vamos a crear una instalaci\u00f3n de cero de wordpress con docker.</p> <p>Se crear\u00e1n vol\u00famenes tanto de la base de datos como de los ficheros de wordpress, permitiendo su persistencia y mantener los cambios que hagamos en el proyecto.</p>"},{"location":"desarrollo/wordpress/wordpress_local/#instalacion-de-docker","title":"Instalaci\u00f3n de docker.","text":"<p>https://docs.docker.com/installation/</p>"},{"location":"desarrollo/wordpress/wordpress_local/#configuracion","title":"Configuraci\u00f3n.","text":"<p>Creamos fichero docker-compose.yml</p> <pre><code>version: '3.7'\n\nservices:\n  mysql:\n    image: mariadb:10\n    network_mode: bridge\n    container_name: mysql-gm\n    volumes:\n      - ./gm_db_data:/var/lib/mysql\n    restart: on-failure\n    environment:\n      MYSQL_ROOT_PASSWORD: password # Password MYSQL Root\n  adminer:\n    image: adminer\n    container_name: adminer-gm\n    network_mode: bridge\n    restart: always\n    ports:\n      - 8080:8080\n    depends_on:\n    - mysql\n    links:\n    - mysql\n  web:\n    image: wordpress\n    network_mode: bridge\n    container_name: wordpress-gm\n    restart: on-failure\n    volumes:\n     - ./html:/var/www/html\n    environment:\n      WORDPRESS_DB_NAME: wordpress\n    ports: \n    - 8002:80\n    depends_on:\n    - mysql\n    links:\n    - mysql\nvolumes:\n  gm_db_data:\n</code></pre>"},{"location":"desarrollo/wordpress/wordpress_local/#script-run","title":"Script run","text":"<pre><code>#!/bin/bash\n\necho \"Iniciamos docker\"\nsudo service docker start\n\necho \"Levatamos contenedores docker desde docker-compose.yml\"\ndocker-compose up\n</code></pre> <p>Permisos de ejecuci\u00f3n:</p> <pre><code>chmod +x run\n</code></pre> <p>Ejecutamos script run.</p> <p>Vamos a http://localhost:8002 y configuramos wordpress.</p> <p>En este caso nuestros los datos ser\u00edan:</p> <ul> <li>Nombre de la base de datos: wordpress</li> <li>Host: mysql</li> <li>Usuario: root</li> <li>Password: password</li> </ul> <p>Ahora tenemos:</p> <ul> <li> <p>Wordpress en http://localhost:8002</p> </li> <li> <p>Adminer en http://localhost:8080</p> </li> </ul>"},{"location":"desarrollo/wordpress/wordpress_local/#varios","title":"Varios.","text":""},{"location":"desarrollo/wordpress/wordpress_local/#importar-base-de-datos","title":"Importar base de datos.","text":"<p>Una vez tengamos la base de datos del servidor en local tendremos que transformar las urls, ejemplo https://DOMINIO.com por http://localhost:8001.</p> <p>Del fichero local hacemos una copia para local:</p> <pre><code>sed -e 's/https:\\/\\/DOMINIO\\.com/http:\\/\\/localhost:8001/g' DOMINIO-servidor.sql &gt; DOMINIO-local.sql\n</code></pre> <p>Ejecutamos importaci\u00f3n:</p> <pre><code>docker exec -i mysql-container mysql -uuser -phttps://www.youtube.com/watch?v=ZOn1xwSUsSApassword name_db &lt; DOMINIO-local.sql\n</code></pre> <p>Nota:  En mi caso he tenido problemas con la codificaci\u00f3n de caracteres y he tenido  que hacerlo desde adminer.</p>"},{"location":"desarrollo/wordpress/wordpress_local/#otros","title":"Otros.","text":"<p>Borrar base de datos:</p> <pre><code>docker exec -i mysql-container mysql -uuser -ppassword name_db -e 'DROP DATABASE wordpress;'\n</code></pre> <p>Crear base de datos:</p> <pre><code>docker exec -i mysql-container mysql -uuser -ppassword -e 'CREATE DATABASE wordpress character set utf8;'\n</code></pre>"},{"location":"desarrollo/wordpress/wordpress_local/#depurar","title":"Depurar.","text":""},{"location":"desarrollo/wordpress/wordpress_local/#mostrar-mensajes-de-error","title":"Mostrar mensajes de error.","text":"<p>Activamos registro de errores desde wp-config.php:</p> <pre><code>// Enable WP_DEBUG mode\ndefine('WP_DEBUG', true);\n\n// Enable Debug logging to the /wp-content/debug.log file\ndefine('WP_DEBUG_LOG', true);\n\n// Disable display of errors and warnings\ndefine('WP_DEBUG_DISPLAY', true);\n\n// Mostrar errores.\n@ini_set('display_errors',1);\n\n// Use dev versions of core JS and CSS files (only needed if you are modifying these core files)\ndefine('SCRIPT_DEBUG', true);\n</code></pre> <p>Ejecutamos:</p> <pre><code>sudo docker exec -ti APPNAME bash\ntail -f wp-content/debug.log\n</code></pre>"},{"location":"desarrollo/wordpress/wp-cli_con_docker/","title":"WP-CLI con Docker","text":"<p>Para poder tener wp-cli en local utilizaremos una imagen de wordpress que lo contenga.</p>"},{"location":"desarrollo/wordpress/wp-cli_con_docker/#fichero-docker-composeyml","title":"Fichero docker-compose.yml:","text":"<pre><code>version: '3.7'\n\nservices:\n  mysql:\n    image: mariadb:10\n    network_mode: bridge\n    container_name: mysql-lo\n    volumes:\n      - ./gm_db_data:/var/lib/mysql\n    restart: on-failure\n    environment:\n      MYSQL_ROOT_PASSWORD: password # Password MYSQL Root\n  adminer:\n    image: adminer\n    container_name: adminer-lo\n    network_mode: bridge\n    restart: always\n    ports:\n      - 8080:8080\n    depends_on:\n    - mysql\n    links:\n    - mysql\n  web:\n    image: conetix/wordpress-with-wp-cli\n    network_mode: bridge\n    container_name: wordpress-lo\n    restart: on-failure\n    volumes:\n      - ./html:/var/www/html\n    environment:\n      WORDPRESS_DB_NAME: wordpress\n    ports: \n      - 8001:80\n    depends_on:\n      - mysql\n    links:\n    - mysql\nvolumes:\n  gm_db_data:\n</code></pre>"},{"location":"desarrollo/wordpress/wp-cli_con_docker/#abrir-una-consola-en-wpcli","title":"Abrir una consola en wpcli","text":"<pre><code>docker-compose exec web wp --info\n</code></pre>"},{"location":"desarrollo/wordpress/wp-cli_con_docker/#comandos-de-ejemplo","title":"Comandos de ejemplo","text":""},{"location":"desarrollo/wordpress/wp-cli_con_docker/#actualizar-todos-los-plugins","title":"Actualizar todos los plugins","text":"<pre><code>wp plugin update --all\n</code></pre>"},{"location":"desarrollo/wordpress/wp-cli_con_docker/#actualizar-wordpress-y-base-de-datos","title":"Actualizar wordpress y base de datos","text":"<pre><code>wp core update\nwp core update-db\n</code></pre>"},{"location":"desarrollo/wordpress/wp-cli_con_docker/#volver-a-una-version-concreta","title":"Volver a una versi\u00f3n concreta.","text":"<pre><code>wp core update --version=3.1 --force\n\n</code></pre>"},{"location":"desarrollo/wordpress/wp-cli_con_docker/#referencias","title":"Referencias:","text":"<ul> <li>neliosoftware.com</li> <li>developer.wordpress.org </li> </ul>"},{"location":"linux/escritorio/Agente_ssh_en_kde_plasma/","title":"Agente ssh en kde plasma","text":"<p>Afegim script d'inici: ~/.config/autostart-scripts/ssh-unlock.sh</p> <pre><code>#!/bin/sh\nexport SSH_ASKPASS=/usr/bin/ksshaskpass\n/usr/bin/ssh-add $HOME/.ssh/id_rsa &lt;/dev/null\n</code></pre> <p>Executem l'script per primera vegada:</p> <pre><code>sh ~/.config/autostart-scripts/ssh-unlock.sh\n</code></pre> <p>Ens demanar\u00e0 el password de la clau i podem especificar que no volem que ens torni a preguntar.</p> <p>D'aquesta manera ja podem treballar sense que ens pregunti cada vegada que la utilitzem.</p> <p>En caso de querer cambiar la contrase\u00f1a podemos gestionarla desde:</p> <p><code>kwalletmanager5</code></p>"},{"location":"linux/escritorio/Disco-duro-de-un-apple-en-linux/","title":"Disco duro de un apple en linux","text":"<p>sudo apt-get install hfsprogs sudo mkdir /media/tmp sudo mount -t hfsplus -o force,rw /dev/sdb2 /media/tmp</p>"},{"location":"linux/escritorio/Neon_post_instalacion/","title":"Post instalaci\u00f3n KDE Neon 5.17","text":""},{"location":"linux/escritorio/Neon_post_instalacion/#apariencia","title":"Apariencia.","text":"<p>Configuramos panel de arriba para mostrar el men\u00fa de la aplicaci\u00f3n activa y una configuramos kwin para que no muestre el borde de las ventanas cuando esten configuradas.</p> <p>En el fichero .config/kwinrc a\u00f1adimos:</p> <pre><code>[Windows]\nBorderlessMaximizedWindows=true\n</code></pre> <p>y ejecutamos este comando para aplicar los cambios:</p> <pre><code>qdbus org.kde.KWin /KWin reconfigure\n</code></pre>"},{"location":"linux/escritorio/Neon_post_instalacion/#aplicaciones-basicas","title":"Aplicaciones b\u00e1sicas.","text":"<p>Instalaci\u00f3n de programas:</p> <pre><code>sudo apt-get install thunderbird         # Correo.\nsudo apt-get install xul-ext-lightning   # Calendario.\nsudo apt-get install terminator          # Terminal\nsudo apt-get install htop                # Monitor del sistema.\nsudo apt-get install ffmpegthumbs        # Miniaturas de v\u00eddeo.\nsudo apt-get install ffmpegthumbs        # Miniaturas de v\u00eddeo.\nsudo apt install kubuntu-driver-manager  # Controladores privativos.\n</code></pre>"},{"location":"linux/escritorio/Neon_post_instalacion/#libreoffice","title":"Libreoffice","text":"<pre><code>sudo apt install libreoffice libreoffice-l10n-ca  hunspell-ca hunspell-es\n</code></pre>"},{"location":"linux/escritorio/Neon_post_instalacion/#rambox-whatsapp-telegram","title":"Rambox (Whatsapp, telegram, ...)","text":"<p>https://github.com/ramboxapp/community-edition/releases/tag/0.6.9</p>"},{"location":"linux/escritorio/Neon_post_instalacion/#desarrollo","title":"Desarrollo.","text":""},{"location":"linux/escritorio/Neon_post_instalacion/#docker","title":"Docker.","text":""},{"location":"linux/escritorio/Neon_post_instalacion/#anadimos-repositorio-para-docker-en-etcaptsorcelist","title":"A\u00f1adimos repositorio para docker en /etc/apt/sorce.list.","text":"<pre><code>deb [arch=amd64] https://download.docker.com/linux/ubuntu/ bionic stable\n</code></pre>"},{"location":"linux/escritorio/Neon_post_instalacion/#desinstalamos-version-antigua","title":"Desinstalamos versi\u00f3n antigua.","text":"<pre><code>sudo apt-get remove docker docker-compose\n</code></pre>"},{"location":"linux/escritorio/Neon_post_instalacion/#instalamos-desde-nuevo-repositorio","title":"Instalamos desde nuevo repositorio.","text":"<pre><code>sudo apt-get install docker-ce docker-ce-cli containerd.io\n</code></pre>"},{"location":"linux/escritorio/Neon_post_instalacion/#instalamos-ultima-version-de-docker-compose","title":"Instalamos \u00faltima version de docker-compose:","text":"<pre><code>sudo curl -L \"https://github.com/docker/compose/releases/download/1.24.1/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose\nsudo chmod +x /usr/local/bin/docker-compose\n</code></pre>"},{"location":"linux/escritorio/Neon_post_instalacion/#anadimos-nuestro-usuario-al-grupo-docker","title":"A\u00f1adimos nuestro usuario al grupo docker.","text":"<pre><code>sudo usermod -aG docker $USER\n</code></pre>"},{"location":"linux/escritorio/Neon_post_instalacion/#mariadb","title":"MariaDB","text":"<p>Instalamos:</p> <p>sudo apt install mariadb-client mariadb-server</p>"},{"location":"linux/escritorio/Neon_post_instalacion/#configuramos-usuario-root","title":"Configuramos usuario root.","text":"<p>Para que pueda utilizar el cliente de consola sin pedir contrase\u00f1a.</p> <p>Entramos en mysql:</p> <pre><code>sudo mysql\n\n</code></pre> <p>Desde mysql:</p> <pre><code>use mysql;\nupdate user set plugin='' where user='root';\nflush privileges;\n</code></pre> <p>Configuramos mediante el fichero ~/.my.cnf</p> <pre><code>[client]\nuser=root\npassword=PASWORD_ROOT\n</code></pre>"},{"location":"linux/escritorio/i3wm/","title":"Personalizaci\u00f3n i3wm","text":""},{"location":"linux/escritorio/i3wm/#instalacion","title":"Instalaci\u00f3n","text":"<pre><code># Instalamos dependencias.\nsudo apt-get install i3 dunst compton tilix feh rofi\n\n# Bajamos configuraci\u00f3n.\ngit clone git@gitlab.com:edumag/i3-configuraci-n.git\nmv i3-configuraci-n.git $HOME/.config/i3\n\n# Instalamos font awesome.\nwget https://github.com/creationix/boxcode/raw/master/font/fontawesome-webfont.ttf\n[[ -d \"$HOME/.fonts\" ]] || mkdir $HOME/.fonts\nmv fontawesome-webfont.ttf $HOME/.fonts/\n\n# Fuente System San Francisco\nwget https://github.com/supermarin/YosemiteSanFranciscoFont/blob/master/System%20San%20Francisco%20Display%20Regular.ttf?raw=true -o \"$HOME/.fonts/System San Francisco Display Regular.ttf\"\n\n# A\u00f1adimos configuraci\u00f3n propia a dunst\nln -s \"$HOME/.config/i3/dunst\" \"$HOME/.config\"\n\n# Control de volumen\nsudo apt-get install pasystray lxappareance pavucontrol\n</code></pre>"},{"location":"linux/escritorio/i3wm/#combinacion-de-teclas-basica","title":"Combinaci\u00f3n de teclas b\u00e1sica","text":"Combinaci\u00f3n Acci\u00f3n Mod+Enter Terminal Mod+Shift+Q Cerrar centana Mod+d Lanzador aplicaciones Mod+Shift+Space Cambiar ventana a modo flotante Mod+r Redimensionar ventana Mod+Alt_L Seleccionar ventana con Rofi Mod+Shift+Flecha Mover ventana de posici\u00f3n Mod+w Cambio de disposici\u00f3n de ventanas (Layouts) Mod+Flecha Cambiamos foco de ventana Mod+f FullScreen ## font-awesome <p>Font Awesome Free's Cheatsheet</p> <p>Desde la web de fontawesome podemos copiar y pegar los iconos en nuestros ficheros de configuraci\u00f3n</p>"},{"location":"linux/escritorio/i3wm/#rofi","title":"Rofi","text":"<p>Instalamos rofi como lanzador de aplicaci\u00f3n y de paso tenemos calculadora y selector de ventanas.</p>"},{"location":"linux/escritorio/i3wm/#menu-de-aplicaciones-modd","title":"Men\u00fa de aplicaciones (Mod+d)","text":""},{"location":"linux/escritorio/i3wm/#calculadora-modc","title":"Calculadora (Mod+c)","text":""},{"location":"linux/escritorio/i3wm/#seleccionar-ventana-modtab_l","title":"Seleccionar ventana. (Mod+Tab_L)","text":""},{"location":"linux/escritorio/i3wm/#dunst-notificaciones","title":"dunst (Notificaciones)","text":""},{"location":"linux/escritorio/i3wm/#pasystray-volumen","title":"pasystray (Volumen)","text":"<p>Al lanzar pasystray el icono oscuro no se ve bien. Lanzamos lxappareance para cambiar el tema gtk y los iconos.</p> <p></p>"},{"location":"linux/escritorio/i3wm/#configuracion-de-touchpad","title":"Configuraci\u00f3n de touchpad.","text":"<pre><code>sudo mkdir -p /etc/X11/xorg.conf.d &amp;&amp; sudo tee &lt;&lt;'EOF' /etc/X11/xorg.conf.d/90-touchpad.conf 1&gt; /dev/null\nSection \"InputClass\"\n        Identifier \"touchpad\"\n        MatchIsTouchpad \"on\"\n        Driver \"libinput\"\n        Option \"Tapping\" \"on\"\nEndSection\n\nEOF\n</code></pre>"},{"location":"linux/escritorio/i3wm/#referencias","title":"Referencias","text":"<ul> <li>https://cravencode.com/post/essentials/enable-tap-to-click-in-i3wm/</li> </ul>"},{"location":"linux/escritorio/i3wm/#control-de-brillo","title":"Control de brillo","text":"<p>No he podido encontrar ninguna aplicaci\u00f3n que me funcione, al final he realizado un simple script que hace la funci\u00f3n.</p> <p>$ ./brightness.sh -h</p> <p>uso: brightness.sh [+|-]</p>"},{"location":"linux/escritorio/i3wm/#referencias_1","title":"Referencias","text":"<ul> <li>Una buena explicaci\u00f3n de como funciona</li> <li>https://sergioquijanorey.github.io/i3/linux/programacion/administracion/2018/09/09/configuraci%C3%B3n-i3wm.html</li> </ul>"},{"location":"linux/escritorio/mutt/","title":"Mutt","text":"<p>Gestionar correo desde consola.</p> <p>http://www.mutt.org/</p> <p></p> <p>Mutt nos permite administrar nuestro correo desde consola, de esta manera evitamos lanzar aplicaciones que nos consuman mucha memoria.</p> <p>En la configuraci\u00f3n de este proyecto tenemos un ejemplo de mutt funcionando con un correo de gmail y otro cinfugrado con smtp e imap.</p>"},{"location":"linux/escritorio/mutt/#goobook","title":"goobook","text":"<p>Gestor de contactos de gmail en la consola que se adapta perfectamente a mutt.</p> <p>https://pypi.org/project/goobook/</p>"},{"location":"linux/escritorio/mutt/#instalacion-y-puesta-en-marcha","title":"Instalaci\u00f3n y puesta en marcha","text":"<pre><code>sudo apt-get install mutt goobook\n</code></pre>"},{"location":"linux/escritorio/mutt/#clonar-configuracion","title":"Clonar configuraci\u00f3n","text":"<pre><code>cd .config\ngit clone https://gitlab.com/edumag/muttstartup.git\nmv muttstartup mutt\ncd mutt\n</code></pre> <p>Crear fichero accounts/secrets</p> <pre><code># vim:ft=muttrc\n# First account variables labeled with '_00'.\nset my_imap_pass_00  = &lt;PASSWORD&gt;\nset my_hostname_00   = \"&lt;HOSTNAME_CORREO&gt;\"\nset my_folder_00     = \"imaps://&lt;IMAP_URL&gt;\"\nset my_from_00       = \"&lt;CORREO&gt;\"\nset my_realname_00   = \"&lt;NOMBRE_REAL&gt;\"\nset my_imap_user_00  = \"&lt;IMAP_USER&gt;\" # Posiblemente el mismo correo.\nset my_spoolfile_00  = imaps://&lt;IMAP_USER&gt;/INBOX\nset my_smtp_url_00   = \"smtps://&lt;IMAP_USER@&lt;IMAP_URL&gt;:465/\"\n\n# Second account the variables are incremented to '_01'.\nset my_imap_pass_01 = &lt;PASSWORD&gt;\nset my_folder_01    = \"imaps://&lt;USER_GMAIL&gt;@imap.gmail.com\"\nset my_from_01      = \"&lt;CORREO_GMAIL&gt;\"\nset my_realname_01  = \"NOMBRE_REAL\"\nset my_imap_user_01 = \"CORREO_GMAIL\"\nset my_spoolfile_01 = imaps://&lt;USER_GMAIL&gt;@imap.gmail.com/\n</code></pre> <p>Encriptamos fichero secrets.</p> <p>En caso de tener una clave gpg podemos crearla con:</p> <pre><code>gpg --gen-key\n</code></pre> <p>Ahora encriptamos con el correo de la llave generada.</p> <pre><code>cd accounts\ngpg --recipient &lt;CORREO_GPG&gt; --encrypt secrets\n</code></pre> <p>Borramos fichero con las credenciales.</p> <pre><code>rm secrets\n</code></pre> <p>Si queremos recuperarlo.</p> <pre><code>gpg --decrypt secrets.gpg &gt; secrets\n</code></pre>"},{"location":"linux/escritorio/mutt/#bashrc","title":".bashrc","text":"<p>Arrancamos agente gpg desde ~/.bashrc</p> <pre><code>envfile=\"$HOME/.gnupg/gpg-agent.env\"\nif [[ -e \"$envfile\" ]] &amp;&amp; kill -0 $(grep GPG_AGENT_INFO \"$envfile\" | cut -d: -f 2) 2&gt;/dev/null; then\n  eval \"$(cat \"$envfile\")\" 2&gt;/dev/null \nelse\n  eval \"$(gpg-agent --daemon --allow-preset-passphrase 2&gt;/dev/null)\" \nfi\nexport GPG_AGENT_INFO\n</code></pre>"},{"location":"linux/escritorio/mutt/#varios","title":"Varios","text":"<p>En ~/.bashrc a\u00f1ado la linea:</p> <pre><code>alias mutt=\"cd ~/Mail ; mutt\"\n</code></pre> <p>De esta manera cada vez que arrancamos mutt nos sit\u00faa el el directorio que tenemos configurado en muttrc y en caso de bajar un adjunto lo encontraremos siempre aqu\u00ed</p>"},{"location":"linux/escritorio/mutt/#referencias","title":"Referencias","text":"<ul> <li>https://nixvsevil.com/posts/mutt-gmail-oauth-gnupg/</li> <li>https://www.albertopicado.es/enviar-correo-desde-consola-con-mutt/</li> </ul>"},{"location":"proyectos/emma/","title":"EMMA","text":"<p>Os presentamos al proyecto EMMA de c\u00f3digo abierto.</p> <p></p> <p>Un desarrollo creado en python para facilitar el traiding en cualquier exchange soportado por la librer\u00eda ccxt.</p> <p>De momento ha sido probado con binance y kraken.</p> <p>En este enlace ten\u00e9is el c\u00f3digo fuente.</p> <p>La idea principal es tener una herramienta que pueda tomar decisiones por nosotros en caso necesario.</p> <p>El desarrollo esta en fase beta no se recomienda utilizar en modo real sin supervisar.</p> <p>Para poder testear tenemos el modo simulado que simplemente no genera ordenes en el exchange o bien podemos configurar la testnet como exchange.</p> <p>Podemos ejecutar la aplicaci\u00f3n en nuestro ordenador o en un servidor, en la carpeta de scripts tenemos un par de de ellos que ejecutan la aplicaci\u00f3n en el servidor mediante tmux, solo es necesario tener bien configurado el servidor para aceptar peticiones ssh sin contrase\u00f1a.</p> <p>Tambi\u00e9n podremos comunicarnos mediante telegram creando un bot especifico para ello y a\u00f1adiendo las claves en la configuraci\u00f3n.</p> <p>El sistema de estrategias nos permite automatizar las operaciones con el peligro que eso conlleva.</p> <p>No es nada recomendable sin tener muy claro lo que se hace, ya que lo que funciona un d\u00eda al siguiente ya no sirve, pero si que es muy \u00fatil para programar el cierre cuando se den ciertas circunstancias o con el stoptrailing.</p> <p>El c\u00f3digo est\u00e1 muy verde en muchos aspectos, as\u00ed que si alguien se anima a mejorar o ampliar las funcionalidades sera bien venido.</p> <p>Desarrollo en python basado en la librer\u00eda ccxt.</p> <p>Nos permite gestionar de forma \u00e1gil nuestras operaciones en los diferentes exchanges.</p> <p>Advertencia</p> <p>Este proyecto esta en fase de desarrollo, no se recomienda utilizar en modo real.</p>"},{"location":"proyectos/emma/#funcionalidades","title":"Funcionalidades","text":"<p>Nos permite tener una visi\u00f3n general del mercado de criptomonedas, mostr\u00e1ndonos el estado de los precios, la tendencia, el volumen el ADX y el MACD en cinco de las temporalidades que escojamos.</p> <p>Establecer diferentes stoptrailing por cada operaci\u00f3n o por estrategia.</p> <p>Establecer stoploss por cada operaci\u00f3n o estrategia.</p> <p>Configurar diferentes estrategias para diferentes temporalidades. (Ver estrategias)</p> <p>Modo Real y modo SIMULA para pruebas.</p> <p>Comunicaci\u00f3n con telegram. (Avisos y env\u00edo de ordenes)</p> <p>Scripts que permiten abrir una terminal con tmux en un servidor.</p>"},{"location":"proyectos/emma/#install","title":"Install","text":""},{"location":"proyectos/emma/#app","title":"App","text":"<p>git clone git@gitlab.com:edumag/emma.git cd emma pip install -r requirements.txt</p>"},{"location":"proyectos/emma/#generate-database","title":"Generate database","text":"<p>./scripts/init_db</p>"},{"location":"proyectos/emma/#configuracion","title":"Configuraci\u00f3n","text":"<p>cp env.example .env</p> <p>Editar fichero .env y adaptarlo con vuestros datos.</p>"},{"location":"proyectos/emma/#estrategias","title":"Estrategias","text":"<p>Importar estrategias.</p> <p>./src/strategies.py -i all</p>"},{"location":"proyectos/emma/#configure","title":"Configure","text":"<p>./src/db.py -cfg estrategias_activadas:A_Z</p>"},{"location":"sysadmin/Golpeo_de_puertos/","title":"Golpeo de puertos","text":"<p>El golpeo de puertos (del ingl\u00e9s port knocking) es un mecanismo para abrir puertos externamente en un firewall mediante una secuencia preestablecida de intentos de conexi\u00f3n a puertos que se encuentran cerrados. Una vez que el firewall recibe una secuencia de conexi\u00f3n correcta, sus reglas son modificadas para permitir al host que realiz\u00f3 los intentos conectarse a un puerto espec\u00edfico.</p>"},{"location":"sysadmin/Golpeo_de_puertos/#servidor","title":"Servidor","text":""},{"location":"sysadmin/Golpeo_de_puertos/#instalar-en-servidor","title":"Instalar en servidor","text":"<p><code>sudo apt-get install knockd</code></p>"},{"location":"sysadmin/Golpeo_de_puertos/#configuracion","title":"Configuraci\u00f3n","text":""},{"location":"sysadmin/Golpeo_de_puertos/#etcdefaultknockd","title":"/etc/default/knockd","text":"<pre><code># control if we start knockd at init or not   \n# 1 = start                                   \n# anything else = don't start                 \n# PLEASE EDIT /etc/knockd.conf BEFORE ENABLING\nSTART_KNOCKD=1                                \n\n# command line options                        \nKNOCKD_OPTS=\"-i ens3\"\n</code></pre>"},{"location":"sysadmin/Golpeo_de_puertos/#etcknockdconf","title":"/etc/knockd.conf","text":"<p>Ejemplo que viene por defecto.</p> <pre><code>[options]\n        UseSyslog\n\n[openSSH]\n        sequence    = 7000,8000,9000\n        seq_timeout = 5\n        command     = /sbin/iptables -A INPUT -s %IP% -p tcp --dport 5775 -j ACCEPT\n        tcpflags    = syn\n\n[closeSSH]\n        sequence    = 9000,8000,7000\n        seq_timeout = 5\n        command     = /sbin/iptables -D INPUT -s %IP% -p tcp --dport 5775 -j ACCEPT\n        tcpflags    = syn\n</code></pre>"},{"location":"sysadmin/Golpeo_de_puertos/#cliente","title":"Cliente","text":"<p><code>sudo apt-get install knockd</code></p>"},{"location":"sysadmin/Golpeo_de_puertos/#abriendo-puerto","title":"Abriendo puerto","text":"<p><code>knock localhost 7000 8000 9000</code></p>"},{"location":"sysadmin/Golpeo_de_puertos/#cerrando-puerto","title":"Cerrando puerto","text":"<p><code>knock localhost 9000 8000 7000</code></p>"},{"location":"sysadmin/Golpeo_de_puertos/#referencias","title":"Referencias","text":"<ul> <li>https://es.wikipedia.org/wiki/Golpeo_de_puertos</li> </ul>"},{"location":"sysadmin/NextCloud_VPN_VPS/","title":"NextCloud VPN VPS","text":"<p>Instalamos un nextcloud en la computadora de casa pero al estar dentro de guifiNet no tengo acceso desde internet.</p> <p>En caso de tener un router con salida a internet directamente hay una soluci\u00f3n mucho m\u00e1s sencilla que es con noip, podeis buscar que hay mucha informaci\u00f3n.</p> <p>La soluci\u00f3n que he encontrado ha sido instalar una VPN en el VPS que tengo contratado con OVH.</p> <p>Estos son los pasos a seguir.</p>"},{"location":"sysadmin/NextCloud_VPN_VPS/#instalacion-de-nextcloud","title":"Instalaci\u00f3n de NextCloud","text":"<p>Para lainstalaci\u00f3n de nexclous solo hay que seguir este excelente tutorial.</p> <p>https://www.digitalocean.com/community/tutorials/como-instalar-y-configurar-nextcloud-en-ubuntu-18-04-es</p>"},{"location":"sysadmin/NextCloud_VPN_VPS/#varios","title":"Varios","text":""},{"location":"sysadmin/NextCloud_VPN_VPS/#forzar-a-nextcloud-a-reescanear-en-busca-de-nuevos-ficheros","title":"Forzar a nextcloud a reescanear en busca de nuevos ficheros","text":"<p>sudo nextcloud.occ files:scan --all</p>"},{"location":"sysadmin/NextCloud_VPN_VPS/#ampliar-los-dominios-permitidos-a-nextcloud","title":"Ampliar los dominios permitidos a nextcloud","text":"<p>Puede ver los ajustes actuales consultando el valor de la matriz trusted_domains:</p> <p><code>sudo nextcloud.occ config:system:get trusted_domains</code></p> <p>A\u00f1adimos un nuevo dominio.</p> <p><code>sudo nextcloud.occ config:system:set trusted_domains 1 --value=example.com</code></p>"},{"location":"sysadmin/NextCloud_VPN_VPS/#openvpn","title":"OpenVPN","text":""},{"location":"sysadmin/NextCloud_VPN_VPS/#desde-el-servidor","title":"Desde el servidor:","text":""},{"location":"sysadmin/NextCloud_VPN_VPS/#instalamos-openvpn","title":"Instalamos openvpn","text":"<p>Esta es la forma m\u00e1s sencilla que he encontrado.</p> <pre><code>wget https://raw.githubusercontent.com/theonemule/simple-openvpn-server/master/openvpn.sh\nchmod +x openvpn.sh\n./openvpn.sh --adminpassword=[Contrase\u00f1a admin] --host=vpn.[tu dominio].com\n</code></pre> <p>En mi caso he tenido que realizar unos cambios para poder tener conexi\u00f3n al ordenador de casa.</p>"},{"location":"sysadmin/NextCloud_VPN_VPS/#configuracion-openvpn","title":"Configuraci\u00f3n openvpn","text":"<p><code>sudo vim /etc/openvpn/server.conf</code></p> <pre><code>port 1194\nproto udp\ndev tun\nsndbuf 0\nrcvbuf 0\nca ca.crt\ncert server.crt\nkey server.key\ndh dh.pem\ntls-auth ta.key 0\ntopology subnet\nserver 10.8.0.0 255.255.255.0\nclient-to-client\nifconfig-pool-persist ipp.txt\npush \"redirect-gateway def1 bypass-dhcp\"\npush \"dhcp-option DNS 8.8.8.8\"\npush \"dhcp-option DNS 8.8.4.4\"\nkeepalive 10 120\ncipher AES-256-CBC\nuser nobody\ngroup nogroup\npersist-key\npersist-tun\nstatus openvpn-status.log\nverb 3\ncrl-verify crl.pem\nclient-config-dir ccd\nexplicit-exit-notify 1\n</code></pre>"},{"location":"sysadmin/NextCloud_VPN_VPS/#firewall","title":"Firewall","text":"<p><code>sudo vim /etc/ufw/before.rules</code></p> <pre><code># START OPENVPN RULES\n# NAT table rules\n*nat\n:POSTROUTING ACCEPT [0:0] \n# Allow traffic from OpenVPN client to [ens3] (change to the interface you discovered!)\n-A POSTROUTING -s 10.8.0.0/8 -o ens3 -j MASQUERADE\nCOMMIT\n# END OPENVPN RULES\n</code></pre> <p>En tu caso tendr\u00e1s que poner la interface que te corresponde.</p> <p>Puedes verla con <code>ip route | grep default</code></p> <p><code>sudo vim /etc/default/ufw</code></p> <p>Modificar valor:</p> <p><code>DEFAULT_FORWARD_POLICY=\"ACCEPT\"</code></p>"},{"location":"sysadmin/NextCloud_VPN_VPS/#sistema","title":"Sistema","text":"<p><code>sudo vim sudo nano /etc/sysctl.conf</code></p> <pre><code>net.ipv4.ip_forward=1\n</code></pre> <p>Reiniciar configuraci\u00f3n.</p> <p><code>sudo sysctl -p</code></p>"},{"location":"sysadmin/NextCloud_VPN_VPS/#conprobacion","title":"Conprobaci\u00f3n.","text":"<p>ip a s tun0</p> <pre><code>14: tun0: &lt;POINTOPOINT,MULTICAST,NOARP,UP,LOWER_UP&gt; mtu 1500 qdisc fq_codel state UNKNOWN group default qlen 100\n    link/none \n    inet 10.8.0.100 peer 255.255.255.0/32 scope global tun0\n       valid_lft forever preferred_lft forever\n    inet6 fe80::f2c0:df16:b35d:ae30/64 scope link stable-privacy \n       valid_lft forever preferred_lft forever\n</code></pre>"},{"location":"sysadmin/NextCloud_VPN_VPS/#crear-fcihero-de-configuracion-para-el-cliente","title":"Crear fcihero de configuraci\u00f3n para el cliente.","text":"<p>Creamos un nuevo cliente desde el administrador web que nos proporciona el script.</p>"},{"location":"sysadmin/NextCloud_VPN_VPS/#desde-el-cliente","title":"Desde el cliente.","text":"<p><code>sudo apt-get install openvpn</code></p> <p>Movemos el fichero de configuraci\u00f3n que hemos creado a:</p> <p><code>/etc/openvpn/client.conf</code></p> <p><code>sudo systemctl enable openvpn@client.service</code></p>"},{"location":"sysadmin/NextCloud_VPN_VPS/#referencias","title":"Referencias","text":"<ul> <li>https://github.com/theonemule/simple-openvpn-server/</li> <li>https://www.digitalocean.com/community/tutorials/como-configurar-un-servidor-de-openvpn-en-ubuntu-18-04-es</li> </ul>"},{"location":"sysadmin/NextCloud_VPN_VPS/#sshl","title":"SSHL","text":"<p>En este punto tenemos que poder conectar con el cliente desde el servidor.</p> <p>Para comprobarlo:</p> <p>Desde el servidor.</p> <p><code>sudo apt-get install links</code></p> <p><code>links https://10.8.0.2</code></p> <p>IMG </p> <p>Las conexciones al puerto 9999 de la VPS las redirigimos al VPN con la IP del cliente.</p> <p>sslh -p 0.0.0.0:9999 --ssh 10.8.0.2:443</p> <p>Creamos configuraci\u00f3n permanente.</p> <p><code>cat /etc/default/sslh</code></p> <pre><code>RUN=yes\n\n# binary to use: forked (sslh) or single-thread (sslh-select) version\n# systemd users: don't forget to modify /lib/systemd/system/sslh.service\nDAEMON=/usr/sbin/sslh\n\n#DAEMON_OPTS=\"--user sslh --transparent --listen 0.0.0.0:9999 --ssh 10.8.0.100:443 --pidfile /var/run/sslh/sslh.pid\"\nDAEMON_OPTS=\"--user sslh --listen 0.0.0.0:9999 --ssl 10.8.0.2:443 --pidfile /var/run/sslh/sslh.pid\"\n</code></pre>"},{"location":"sysadmin/NextCloud_VPN_VPS/#referencias_1","title":"Referencias:","text":"<ul> <li>https://www.entredevyops.es/posts/laboratorio-sslh.html</li> </ul>"},{"location":"sysadmin/Servidor-seguridad/","title":"Seguridad y configuraci\u00f3n de servidor","text":"<p>En estos d\u00edas extra\u00f1os de confinamiento parece que se ha multiplicado los ataques en internet, en mi caso consiguieron entrar en mi vps y dejarlo completamente in\u00fatil.</p> <p>Aqu\u00ed quedan los pasos que he recopilado para mantener el servidor con un m\u00ednimo de seguridad.</p>"},{"location":"sysadmin/Servidor-seguridad/#ssh","title":"ssh","text":""},{"location":"sysadmin/Servidor-seguridad/#cambio-de-puerto","title":"Cambio de puerto","text":"<p><code>sudo vim /etc/ssh/sshd_config</code></p> <pre><code>- # Port 22\n+ Port 3333 # El que tu quieras en verdad.\n</code></pre> <p>Reiniciamos servicio:</p> <p><code>sudo /etc/init.d/ssh restart</code></p> <p>Ahora para entrar de nuevo deberemos especificar el puerto.</p> <p><code>ssh -p port user@server</code></p> <p>Incluso a\u00f1adirlo en el ~/.ssh/config para no tener que especificarlo todo el rato.</p> <pre><code>Host server\n    IdentityFile ~/.ssh/id_rsa                                          \n    User ubuntu                                                         \n    Hostname server.com                                            \n    Port 1111\n</code></pre>"},{"location":"sysadmin/Servidor-seguridad/#sshd_config","title":"sshd_config","text":"<p>Configuraci\u00f3n m\u00e1s que recomendada:</p> <p>Si activamos estas reglas tener en cuenta que ten\u00e9is que tener configurado previamente la llave ssh en tu ordenador y a\u00f1adida al servidor.</p> <pre><code>PermitRootLogin no        # No se permite acceso a root desde ssh.\nAllowUsers USER1 USER2    # Lista de usuarios que si pueden entrar.\nPasswordAuthentication no # Solo permitimos entrar con clave ssh.\n</code></pre>"},{"location":"sysadmin/Servidor-seguridad/#cortafuegos","title":"Cortafuegos","text":"<pre><code>sudo ufw allow http\nsudo ufw allow https\nsudo ufw allow [SSH PORT]\nsudo ufw disable &amp;&amp; sudo ufw enable\n</code></pre>"},{"location":"sysadmin/Servidor-seguridad/#swap","title":"Swap","text":"<p>Tener swap es fundamental para evitar fallos por falta de memoria.</p> <p>Con esta formula creamos un fichero que nos servir\u00e1 como swap en caso de que nuestro servidor no la tenga habilitada.</p> <pre><code>fallocate -l 3G /swapfile\nchmod 600 /swapfile\nmkswap /swapfile\nswapon /swapfile\n</code></pre> <p>sudo vim /etc/fstab</p> <pre><code>/swapfile swap swap defaults 0 0\n</code></pre>"},{"location":"sysadmin/Servidor-seguridad/#postfix-con-smtp","title":"PostFix con SMTP.","text":"<p>Si teneis un servidor de correo contratado podeis configurar postfix para que envie los correos desde \u00e9l.</p> <p>Si quereis utilizar un gmail tendreis que buscar como hacerlo.</p> <p>Configuramos servidor de correo para poder recibir correos de aviso.</p> <p><code>sudo apt.get install postfix</code></p> <p>Seleccionamos \"Internet site\"</p> <p>y ponemos el nombre del servidor smtp.</p>"},{"location":"sysadmin/Servidor-seguridad/#configuracion","title":"Configuraci\u00f3n","text":"<p><code>sudo vim /etc/postfix/main.cf</code></p> <p>modificamos:</p> <pre><code>myhostname = example.com\nrelayhost = [mail.isp.example]:587\n# enable SASL authentication\nsmtp_sasl_auth_enable = yes\n# disallow methods that allow anonymous authentication.\nsmtp_sasl_security_options = noanonymous\n# where to find sasl_passwd\nsmtp_sasl_password_maps = hash:/etc/postfix/sasl_passwd\n# Enable STARTTLS encryption\nsmtp_use_tls = yes\n# where to find CA certificates\nsmtp_tls_CAfile = /etc/ssl/certs/ca-certificates.crt\n</code></pre> <p>Credenciales:</p> <p>A\u00f1adimos nuestras credenciales de nuestro servidor smtp.</p> <p><code>sudo vim /etc/postfix/sasl_passwd</code></p> <pre><code>[mail.isp.example]:587 username:password\n</code></pre> <pre><code>sudo postmap /etc/postfix/sasl_passwd\nsudo chown root:root /etc/postfix/sasl_passwd /etc/postfix/sasl_passwd.db\nsudo chmod 0600 /etc/postfix/sasl_passwd /etc/postfix/sasl_passwd.db\nsudo rm /etc/postfix/sasl_passwd\n</code></pre> <p>Reiniciamos postfix:</p> <p><code>sudo service postfix restart</code></p>"},{"location":"sysadmin/Servidor-seguridad/#enviar-correo","title":"Enviar correo.","text":"<pre><code>sudo apt-get install mpack\necho \"Test\" &gt; /tmp/test.txt\nmpack -s 'test' /tmp/test.txt tu@email.com\n</code></pre>"},{"location":"sysadmin/Servidor-seguridad/#referencias","title":"Referencias:","text":"<ul> <li>https://www.digitalocean.com/community/tutorials/how-to-install-and-configure-postfix-on-ubuntu-18-04-es</li> </ul>"},{"location":"sysadmin/Servidor-seguridad/#fail2ban","title":"fail2ban","text":"<p><code>sudo apt-get install fail2ban</code></p> <p>Copiamos configuraci\u00f3n por defecto a fichero personalizado.</p> <p><code>sudo cp /etc/fail2ban/jail.conf /etc/fail2ban/jail.local</code></p> <p>Editar configuraci\u00f3n:</p> <p><code>sudo vim /etc/fail2ban/jail.local</code></p> <p>Podemos a\u00f1adir una lista de IPs para que sean ignoradas:</p> <pre><code>ignoreip = 127.0.0.1/8 ::1\n</code></pre> <p>A\u00f1adimos reglas para los wordpress:</p> <pre><code>[ssh]\nenabled  = true\nport     = ssh\nfilter   = sshd\nlogpath  = /var/log/auth.log\nmaxretry = 3\nbantime  = 1h\n\n[wordpress]\nenabled  = true\nfilter   = wordpress\nlogpath  = /var/log/nginx/*.log\nport     = 80,443\nbantime  = 1h\n</code></pre> <p>Creamos fichero /etc/fail2ban/filter.d/wordpress.conf y a\u00f1adimos:</p> <pre><code># Fail2Ban filter for WordPress\n[Definition]\nfailregex =  - - \\[(\\d{2})/\\w{3}/\\d{4}:\\1:\\1:\\1 -\\d{4}\\] \"POST /wp-login.php HTTP/1.1\" 200\nignoreregex =\n</code></pre> <p>Reiniciamos:</p> <p><code>sudo systemctl restart fail2ban</code></p> <p>Ver estado:</p> <pre><code>$ sudo fail2ban-client status\n\nStatus\n|- Number of jail:  3\n`- Jail list:   ssh, sshd, wordpress\n\n$ sudo fail2ban-client status ssh\nStatus for the jail: ssh\n|- Filter\n|  |- Currently failed: 3\n|  |- Total failed: 11\n|  `- File list:    /var/log/auth.log\n`- Actions\n   |- Currently banned: 5\n   |- Total banned: 6\n   `- Banned IP list:   104.248.176.46 106.12.125.140 163.172.166.223 37.187.181.182 51.68.89.100\n</code></pre>"},{"location":"sysadmin/Servidor-seguridad/#consultar-logs-de-fail2ban","title":"Consultar logs de fail2ban","text":"<p>N\u00famero de veces que han sido bloqueada las IPs:</p> <p><code>zgrep -h \"Ban \" /var/log/fail2ban.log* | awk '{print $NF}' | sort | uniq -c</code></p>"},{"location":"sysadmin/Servidor-seguridad/#referencias_1","title":"Referencias:","text":"<ul> <li>https://raiolanetworks.es/blog/bloquear-ataques-dos-con-fail2ban-en-linux/</li> <li>https://geekland.eu/como-consultar-logs-de-fail2ban/</li> </ul>"},{"location":"sysadmin/Servidor-seguridad/#logcheck","title":"Logcheck","text":"<p><code>sudo apt-get install logcheck</code></p>"},{"location":"sysadmin/Servidor-seguridad/#configuracion_1","title":"Configuraci\u00f3n","text":"<p><code>sudo vim /etc/logcheck/logcheck.conf</code></p> <p>Modificamos:</p> <pre><code>SENDMAILTO=\"edu@lesolivex.com\"\nMAILASATTACH=1\n</code></pre>"},{"location":"sysadmin/Servidor-seguridad/#configurando-las-reglas","title":"Configurando las reglas","text":"<p><code>sudo vim /etc/logcheck/ignore.d.server/edumag</code></p> <p>Utilizamos expresiones regulares para indicar las lineas que no queremos mostrar.</p> <pre><code>*.from\\ 251.red-79-157-159.dynamicip.rima-tde.net*\n</code></pre> <p>Probamos la salida:</p> <p><code>sudo -u logcheck logcheck -o -t</code></p> <p>Referencias:</p> <p>\u2022 http://somebooks.es/recibir-informes-sobre-sucesos-de-ubuntu-server-18-04-lts-con-logcheck/</p>"},{"location":"sysadmin/Servidor-seguridad/#actualizaciones-de-seguridad-automaticas","title":"Actualizaciones de seguridad autom\u00e1ticas","text":"<p><code>sudo dpkg-reconfigure --priority=low unattended-upgrades</code></p> <p>Referencias:</p> <p>\u2022 https://help.ubuntu.com/community/AutomaticSecurityUpdates</p>"},{"location":"sysadmin/Servidor-seguridad/#varios","title":"Varios","text":""},{"location":"sysadmin/Servidor-seguridad/#ver-reglas-del-cortafuegos","title":"Ver reglas del cortafuegos:","text":"<p><code>sudo iptables -L -n --line-numbers</code></p>"},{"location":"sysadmin/Servidor-seguridad/#ver-ips-bloqueadas","title":"Ver IPs bloqueadas:","text":"<p><code>sudo iptables -L -n --line-numbers | grep REJECT</code></p>"},{"location":"sysadmin/Servidor-seguridad/#lynis","title":"Lynis","text":"<p>Lynis nos genera un informe muy completo sobre el estado de nuestro servidor y nos da sugerencias.</p> <p><code>sudo apt-get install lynis</code></p> <p><code>sodo lynis audit system</code></p>"},{"location":"sysadmin/Servidor-seguridad/#chkrootkit","title":"chkrootkit","text":"<p>Permite localizar rootkits.</p> <p><code>sudo apt-get install rootkits</code></p> <p><code>sudo chkrootkit</code></p>"},{"location":"sysadmin/Servidor-seguridad/#extras","title":"Extras","text":""},{"location":"sysadmin/Servidor-seguridad/#scripts","title":"Scripts","text":"<p>He realizado unos peque\u00f1os scripts para tener una visi\u00f3n del estado del servidor de forma rapida.</p> <p>https://github.com/edumag/magscripts/tree/master/servidor/ReportServer https://github.com/edumag/magscripts/tree/master/servidor/ReportServer</p> <p>Los scripts est\u00e1n separados por temas as\u00ed que es facil eliminar los que no te interesan o a\u00f1adir otros.</p>"},{"location":"sysadmin/Servidor-seguridad/#envio-del-informe","title":"Env\u00edo del informe.","text":"<p><code>sudo ./reportServer.sh &gt; /tmp/report.txt &amp;&amp; mpack -s repor /tmp/report.txt  edu@lesolivex.com</code></p>"},{"location":"sysadmin/Ubuntu-server-18.04-Afinando/","title":"Afinando ubuntu server 18.04","text":"<p>Una vez instalado logcheck vamos recibiendo avisos de algunas cosas importantes que debemos ajustar y en caso de ser imoprtantes ignorarlas.</p>"},{"location":"sysadmin/Ubuntu-server-18.04-Afinando/#salida-de-logcheck","title":"Salida de logcheck","text":"<p><code>sudo -u logcheck logcheck -o -t</code></p> <pre><code>This email is sent by logcheck. If you no longer wish to receive\nsuch mail, you can either uninstall the logcheck package or modify\nits configuration file (/etc/logcheck/logcheck.conf).\n\nSecurity Events for su\n=-=-=-=-=-=-=-=-=-=-=-\nApr 18 10:22:50 [HOSTAME] su[22045]: pam_systemd(su:session): Cannot create session: Already running in a session\n\nSystem Events\n=-=-=-=-=-=-=\nApr 18 10:04:59 [HOSTAME] dockerd[922]: time=\"2020-04-18T10:04:59.897314633+02:00\" level=warning msg=\"Your kernel does not support swap memory limit\"\nApr 18 10:04:59 [HOSTAME] dockerd[922]: time=\"2020-04-18T10:04:59.897868144+02:00\" level=warning msg=\"Your kernel does not support cgroup rt period\"\nApr 18 10:04:59 [HOSTAME] dockerd[922]: time=\"2020-04-18T10:04:59.897888027+02:00\" level=warning msg=\"Your kernel does not support cgroup rt runtime\"\nApr 18 10:04:59 [HOSTAME] dockerd[922]: time=\"2020-04-18T10:04:59.898400417+02:00\" level=info msg=\"Loading containers: start.\"\nApr 18 10:04:59 [HOSTAME] systemd-timesyncd[602]: Synchronized to time server 91.189.94.4:123 (ntp.ubuntu.com).\nApr 18 10:04:59 [HOSTAME] kernel: [   20.828934] IPv6: ADDRCONF(NETDEV_UP): docker0: link is not ready\nApr 18 10:04:59 [HOSTAME] dockerd[922]: time=\"2020-04-18T10:04:59.894540591+02:00\" level=info msg=\"Default bridge (docker0) is assigned with an IP address 172.17.0.0/16. Daemon option --bip can be used to set a preferred IP address\"\nApr 18 10:04:59 [HOSTAME] systemd-networkd[706]: docker0: Link UP\nApr 18 10:04:59 [HOSTAME] systemd-timesyncd[602]: Network configuration changed, trying to establish connection.\nApr 18 10:04:59 [HOSTAME] systemd-timesyncd[602]: Synchronized to time server 91.189.94.4:123 (ntp.ubuntu.com).\nApr 18 10:05:00 [HOSTAME] kernel: [   20.565372] bridge: filtering via arp/ip/ip6tables is no longer available by default. Update your scripts to load br_netfilter if you need this.\nApr 18 10:05:00 [HOSTAME] kernel: [   20.718541] Initializing XFRM netlink socket\nApr 18 10:05:00 [HOSTAME] kernel: [   20.728739] Netfilter messages via NETLINK v0.30.\nApr 18 10:05:00 [HOSTAME] kernel: [   20.735211] ctnetlink v0.93: registering with nfnetlink.\nApr 18 10:05:00 [HOSTAME] systemd-udevd[2038]: link_config: autonegotiation is unset or enabled, the speed and duplex are not writable.\nApr 18 10:05:00 [HOSTAME] systemd-timesyncd[602]: Network configuration changed, trying to establish connection.\nApr 18 10:05:00 [HOSTAME] networkd-dispatcher[910]: WARNING:Unknown index 4 seen, reloading interface list\nApr 18 10:05:00 [HOSTAME] systemd-udevd[2166]: link_config: autonegotiation is unset or enabled, the speed and duplex are not writable.\nApr 18 10:05:00 [HOSTAME] kernel: [   21.200548] docker0: port 1(veth9baff38) entered blocking state\nApr 18 10:05:00 [HOSTAME] kernel: [   21.200550] docker0: port 1(veth9baff38) entered disabled state\nApr 18 10:05:00 [HOSTAME] kernel: [   21.200633] device veth9baff38 entered promiscuous mode\nApr 18 10:05:00 [HOSTAME] kernel: [   21.202629] IPv6: ADDRCONF(NETDEV_UP): veth9baff38: link is not ready\nApr 18 10:05:00 [HOSTAME] kernel: [   21.202633] docker0: port 1(veth9baff38) entered blocking state\nApr 18 10:05:00 [HOSTAME] kernel: [   21.202635] docker0: port 1(veth9baff38) entered forwarding state\nApr 18 10:05:00 [HOSTAME] kernel: [   21.202669] docker0: port 1(veth9baff38) entered disabled state\nApr 18 10:05:00 [HOSTAME] systemd-networkd[706]: veth9baff38: Link UP\n...\n</code></pre>"},{"location":"sysadmin/Ubuntu-server-18.04-Afinando/#arreglar-problemas","title":"Arreglar problemas","text":""},{"location":"sysadmin/Ubuntu-server-18.04-Afinando/#your-kernel-does-not-support-swap-memory-limit","title":"Your kernel does not support swap memory limit","text":"<p><code>sudo vim /etc/default/grub</code></p> <p>Modificamos GRUB_CMDLINE_LINUX</p> <pre><code>GRUB_CMDLINE_LINUX=\"cgroup_enable=memory swapaccount=1\"\n</code></pre> <p><code>sudo update-grub</code></p> <p><code>sudo reboot</code></p>"},{"location":"sysadmin/Ubuntu-server-18.04-Afinando/#server-returned-error-nxdomain-mitigating-potential-dns-violation","title":"Server returned error NXDOMAIN, mitigating potential DNS violation","text":"<pre><code>cd /etc\nsudo ln -sf ../run/systemd/resolve/resolv.conf /etc/resolv.conf\n</code></pre> <p>https://www.linode.com/community/questions/17081/dns-stops-resolving-on-ubuntu-1804</p>"},{"location":"sysadmin/Ubuntu-server-18.04-Afinando/#configuracion-de-logcheck","title":"Configuraci\u00f3n de logcheck","text":"<p>Editamos el fichero /etc/logcheck/ignore.d.server/custom</p> <p>Aunque se puede poner el nombre que se quiera.</p> <pre><code>*.from\\ 251.red-79-157-159.dynamicip.rima-tde.net*\n*Synchronized\\ to\\ time\\ server*\n*.\\[UFW\\ BLOCK\\]*\n*filtering\\ via\\ arp/ip/ip6tables\\ is\\ no\\ longer\\ available*\n*Initializing\\ XFRM\\ netlink\\ socket*\n*Netfilter\\ messages\\ via\\ NETLINK*\n*ctnetlink\\ v0.93:\\ registering\\ with\\ nfnetlink.*\n*systemd-udevd*\n*networkd-dispatcher*\n*systemd-networkd*\n*IPv6:* \n*Link\\ UP*\n*entered\\ promiscuous\\ mode*\n*entered\\ blocking\\ state*\n*can\\ be\\ used\\ to\\ set\\ a\\ preferred\\ IP\\ address*\n*Network\\ configuration\\ changed*\n*docker0*\n*eth0*\n*snapd*\n*containerd*\n*ovpn-server.*peer\\ info*\n*ovpn-server.*VERIFY\\ OK*\n*ovpn-server.*Initial\\ packet*\n*ovpn-server.*Connection\\ Initiated*\n*ovpn-server.*Control\\ Channel*\n</code></pre> <p><code>*.from\\ 251.red-79-157-159.dynamicip.rima-tde.net*</code></p> <p>Evitamos que nos avise ya que se trata de nuestros clientes de nextcloud intentando conectar cuando esta el ordenador de casa apagado.</p> <p><code>*.Synchronized\\ to\\ time\\ server*.ntp.ubuntu.com*</code></p> <p>Servidor actualizando la hora del sistema.</p> <p><code>*.\\[UFW\\ BLOCK\\]*</code></p> <p>Ips bloqueadas, son demasiadas.</p>"},{"location":"sysadmin/Ubuntu-server-18.04-Afinando/#configuracion-de-postfix","title":"Configuraci\u00f3n de postfix","text":"<p>Nos llegan avisos de postfix:</p> <pre><code>Apr 23 13:45:20 vps713357 postfix/smtpd[22431]: warning: hostname 172-245-92-96-host.colocrossing.com does not resolve to address 172.245.92.96: Name or service not known\nApr 23 13:45:21 vps713357 postfix/smtpd[22431]: disconnect from unknown[172.245.92.96] ehlo=1 mail=1 rcpt=0/1 rset=1 commands=3/4\n</code></pre> <p>Modificamos configuraci\u00f3n para que no acepte correo del exterior.</p>"},{"location":"sysadmin/Ubuntu-server-18.04-Afinando/#etcpostfixmaincf","title":"/etc/postfix/main.cf","text":"<pre><code>inet_interfaces = loopback-only\n</code></pre>"},{"location":"sysadmin/Ubuntu-server-18.04-Afinando/#etcaliases","title":"/etc/aliases","text":"<pre><code>mailer-daemon: postmaster\nroot: edu@lesolivex.com\npostmaster: root\nlogcheck: root\nnobody: root\nhostmaster: root\nusenet: root\nnews: root\nwebmaster: root\nwww: root\nftp: root\nabuse: root\nnoc: root\nsecurity: root\n</code></pre> <p>Activamos los nuevos alias y reiniciamos servidor postfix.</p> <pre><code>sudo newaliases\nsudo systemctl restart postfix\n</code></pre>"},{"location":"sysadmin/dokku/dokku-error/","title":"Error en deploy con dokku","text":"<p>Me he encontrado con el siguiente error al hacer el \u00faltimo deploy del blog.</p> <pre><code>git push dokku master\nCounting objects: 1192, done.\nDelta compression using up to 4 threads.\nCompressing objects: 100% (1154/1154), done.\nWriting objects:  24% (287/1192)   \nWriting objects: 100% (1192/1192), 3.44 MiB | 443.00 KiB/s, done.\nTotal 1192 (delta 864), reused 12 (delta 0)\nremote: Resolving deltas: 100% (864/864), completed with 801 local objects.\n-----&gt; Cleaning up...\n-----&gt; Building lesolivex from herokuish...\n-----&gt; Adding BUILD_ENV to build environment...\n-----&gt; PHP app detected\nremote: -----&gt; Bootstrapping...\nremote: \nremote:  !     ERROR: Failed to download minimal PHP for bootstrapping!\nremote:  !     \nremote:  !     This is most likely a temporary internal error. If the problem\nremote:  !     persists, make sure that you are not running a custom or forked\nremote:  !     version of the Heroku PHP buildpack which may need updating.\n</code></pre>"},{"location":"sysadmin/dokku/dokku-error/#solucion","title":"Soluci\u00f3n","text":"<p>Entramos en servidor y actualizamos herokuish.</p> <pre><code>sudo docker pull gliderlabs/herokuish:latest\n</code></pre>"},{"location":"sysadmin/dokku/dokku_app_node/","title":"Dokku con node","text":"<p>Configurar la app en puerto 5000.</p>"},{"location":"sysadmin/dokku/dokku_app_node/#creamos-app","title":"Creamos app.","text":"<pre><code>dokku apps:create mementomori\ndokku buildpacks:add mementomori https://github.com/heroku/heroku-buildpack-nodejs.git\ndokku domains:add mementomori.lesolivex.com\ndokku domains:add mementomori mementomori.lesolivex.com\ndokku builder-dockerfile:report\ndokku builder-dockerfile:report node-js-app\n</code></pre>"},{"location":"sysadmin/dokku/dokku_app_node/#anadimos-buildpack-nodejs","title":"A\u00f1adimos buildpack nodejs.","text":"<pre><code>dokku config:show mementomori\ndokku buildpacks:clear mementomori\ndokku buildpacks:set mementomori heroku/nodejs\n</code></pre>"},{"location":"sysadmin/dokku/dokku_app_node/#letsencrypt","title":"letsencrypt","text":"<pre><code>dokku config:set --no-restart mementomori DOKKU_LETSENCRYPT_EMAIL=edu@lesolivex.com\ndokku letsencrypt mementomori\ndokku letsencrypt:auto-renew\n</code></pre>"},{"location":"sysadmin/dokku/dokku_forzar_versiones_dockfile_personalizado/","title":"Dokku forzar versiones dockfile personalizado","text":"<p>Truco para poder instalar un proyecto olvidado de hace 10 a\u00f1os.</p>"},{"location":"sysadmin/dokku/dokku_forzar_versiones_dockfile_personalizado/#en-servidor","title":"En servidor","text":"<pre><code>export DATABASE_IMAGE_VERSION=\"5.7.28\"\ndokku mysql:create $app-db\ndokku apps:create $app\ndokku mysql:link $app-db $app\ndokku config:set --no-restart $app DOKKU_LETSENCRYPT_EMAIL=$email\ndokku letsencrypt $app\n## Necesario para conectar dockerfile con mysql.\ndokku docker-options:add $app build '--build-arg DATABASE_URL=`dokku config:get $app DATABASE_URL`'\n# Enlazar puertos.\ndokku proxy:ports-set $app https:443:80\n</code></pre> <p>Forzamos instalaci\u00f3n en dokku con version 5 de mysql:</p> <pre><code>Digest: sha256:5eb9da766abdd5e8cedbde9870acd4b54c1c7e63e72c99e338b009d06f808f04\nStatus: Downloaded newer image for dokku/wait:0.4.3\n=====&gt; MySQL container created: $app-db\n=====&gt; $app-db mysql service information\n       Config dir:          /var/lib/dokku/services/mysql/$app-db/config\n       Data dir:            /var/lib/dokku/services/mysql/$app-db/data\n       Dsn:                 mysql://mysql:aaf38bcf30f9f7b4@dokku-mysql-$app-db:3306/$app_db\n       Exposed ports:       -                        \n       Id:                  57659c5f30ba8685f808cdda9f803d5047a0f653160f418da1190fa8cd682073\n       Internal ip:         172.17.0.11              \n       Links:               -                        \n       Service root:        /var/lib/dokku/services/mysql/$app-db\n       Status:              running                  \n       Version:             mysql:5.5  \n</code></pre> <p>dokku config:show APP:</p> <pre><code>=====&gt; APP env vars\nDATABASE_URL:             mysql://mysql:aaf38bcf30f9f7b4@dokku-mysql-$app-db:3306/$app_db\nDOKKU_APP_RESTORE:        1\nDOKKU_APP_TYPE:           herokuish\nDOKKU_LETSENCRYPT_EMAIL:  $email\nDOKKU_PROXY_PORT:         80\nDOKKU_PROXY_PORT_MAP:     http:80:5000 https:443:5000\nDOKKU_PROXY_SSL_PORT:     443\nGIT_REV:                  9d372d044671a592c85da947565f2213c411b884\n</code></pre>"},{"location":"sysadmin/dokku/dokku_forzar_versiones_dockfile_personalizado/#en-local","title":"En local","text":"<p>Dockerfile</p> <pre><code>FROM php:5.6-apache\n\nRUN a2enmod rewrite\nRUN a2enmod ssl\n\nRUN docker-php-ext-install mysql \nRUN docker-php-ext-enable mysql\n\n\nCOPY ./ /var/www/html/\n\nEXPOSE 443\n</code></pre> <p>composer.json</p> <pre><code>{\n  \"require\": {\n    \"php\": \"5.6\"\n  },\n  \"scripts\": {\n    \"post-install-cmd\": [\n      \"chmod -R 777 wp-content\"\n    ]\n  }\n}\n</code></pre>"}]}